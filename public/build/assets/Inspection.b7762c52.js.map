{"version":3,"file":"Inspection.b7762c52.js","sources":["../../../resources/js/Components/SVG/InIt.vue","../../../resources/js/Components/SVG/Wrong.vue","../../../resources/js/Components/SVG/Remap.vue","../../../resources/js/Components/Inspection/StepOne.vue","../../../resources/js/Components/SVG/Good.vue","../../../resources/js/Components/SVG/Danger.vue","../../../resources/js/Components/SVG/CircleDash.vue","../../../resources/js/Components/SVG/Lines.vue","../../../resources/js/Components/Inspection/StepTwo.vue","../../../resources/js/Components/SVG/ArrowUp.vue","../../../resources/js/Components/SVG/Note.vue","../../../resources/js/Components/SVG/No.vue","../../../resources/js/Components/SVG/Edit.vue","../../../resources/js/Components/Inspection/StepSix.vue","../../../resources/js/Components/Inspection/StepThree.vue","../../../resources/js/Components/SVG/Foods/Chocolate.vue","../../../resources/js/Components/SVG/Foods/PeanutButter.vue","../../../resources/js/Components/SVG/Foods/WholeEgg.vue","../../../resources/js/Components/SVG/Foods/DehydratedRabbit.vue","../../../resources/js/Components/SVG/Foods/GoodnatureRat.vue","../../../resources/js/Components/Inspection/StepFive.vue","../../../resources/js/Components/SVG/Repair.vue","../../../resources/js/Components/SVG/WrongQr.vue","../../../resources/js/Components/Inspection/StepFour.vue","../../../resources/js/Components/SVG/Pen.vue","../../../resources/js/Components/Inspection/AddNote.vue","../../../resources/js/Components/Inspection/EditForm.vue","../../../resources/js/Pages/Inspection.vue"],"sourcesContent":["<template>\n    <svg width=\"32\" height=\"19\" viewBox=\"0 0 32 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M2.78089 6.41381C6.04618 8.75601 9.27571 11.1515 12.514 13.5392C12.857 13.7921 13.1369 13.9906 13.4212 14.3103M11.1306 3.58767C8.42047 8.00294 5.58699 12.3835 2.53459 16.5084C2.33822 16.7738 1.61839 17.5323 2.26366 16.8871M20.2533 2.54801C22.4146 5.7533 24.8633 8.70825 27.4192 11.5188C28.0343 12.1952 28.7307 12.745 29.1109 13.6177M30.0005 2.14062C26.3581 5.61706 22.5101 8.94956 19.0439 12.6541C18.705 13.0164 19.3306 12.6465 19.4458 12.5932\" stroke=\"#D44944\" stroke-width=\"2.5\" stroke-linecap=\"round\"/>\n    </svg>\n</template>\n","<template>\n    <svg width=\"33\" height=\"38\" viewBox=\"0 0 33 38\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M22.4812 32.3851C24.9481 31.4144 27.8893 28.3855 27.323 25.0263C26.9663 22.911 24.1389 23.3857 23.0213 23.8502C21.3036 24.5642 19.4036 25.7017 18.6764 27.6845C18.0339 29.4363 19.2313 30.0858 20.6857 29.8557C23.3905 29.4276 25.6753 26.5178 27.1057 24.2013C28.4546 22.0166 29.0627 18.4626 27.6424 15.8832C26.1176 13.114 22.4236 12.4407 20.004 13.1904C16.7762 14.1906 13.4238 16.4688 11.7827 19.7543C11.0776 21.1662 10.0139 23.9083 11.7829 25.1735C14.3596 27.0165 17.3431 24.6935 19.2271 23.1402C22.1336 20.7441 24.2969 17.6395 25.0244 13.5306C25.657 9.95746 23.3804 7.52483 20.1891 6.99829C16.0348 6.31286 12.2699 8.73529 9.40951 11.5825C8.06321 12.9227 6.92907 14.5451 5.996 16.2742C5.57711 17.0505 4.11067 19.4736 4.86254 20.6268C5.36166 21.3924 6.80487 20.6319 7.29463 20.2995C9.25367 18.9701 10.3202 17.5646 11.3683 16.3154C12.851 14.5483 14.4526 10.4503 14.6553 9.74362C15.5324 6.68538 15.7404 5.0776 15.1475 3.31956\" stroke=\"#8A8A8A\" stroke-width=\"1.5\" stroke-linecap=\"round\"/>\n    </svg>\n\n</template>\n","<template>\n    <svg width=\"44\" height=\"25\" viewBox=\"0 0 44 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g clip-path=\"url(#clip0_0_1)\">\n            <rect x=\"4.50049\" y=\"1.14062\" width=\"15\" height=\"22\" rx=\"0.819393\" fill=\"white\" stroke=\"#7A9EB8\" stroke-width=\"1.5\"/>\n            <path d=\"M11.8944 6.32636V6.90813M15.3849 13.3075H16.5485M13.0579 13.3075H11.8944V15.6346M11.8944 9.23519V10.9805M11.8944 10.9805H11.9002M11.8944 10.9805H14.2272M14.2214 15.6346H16.5485M7.24023 10.9805H9.56729M16.5485 10.9805H16.5543M14.8032 8.65342H16.5485V6.32624L14.2272 6.32636C14.2214 6.3263 14.2272 6.32601 14.2214 6.3263V8.07166C14.2214 8.39296 14.4819 8.65342 14.8032 8.65342ZM8.98578 8.65355H7.24049V6.32636L9.56173 6.32649C9.56755 6.32643 9.56173 6.32614 9.56755 6.32643V8.07179C9.56755 8.39309 9.30708 8.65355 8.98578 8.65355ZM8.9916 13.3074H7.24631V15.6345L9.56755 15.6344C9.57337 15.6345 9.56755 15.6348 9.57337 15.6345V13.8891C9.57337 13.5678 9.3129 13.3074 8.9916 13.3074Z\" stroke=\"#1A2B3D\" stroke-width=\"1.16426\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </g>\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.5968 5.73838C32.2415 4.27471 30.1599 4.27471 29.8045 5.73838C29.575 6.6839 28.4917 7.1326 27.6608 6.62633C26.3746 5.84262 24.9027 7.31454 25.6864 8.60078C26.1927 9.43167 25.744 10.5149 24.7984 10.7445C23.3348 11.0998 23.3348 13.1814 24.7984 13.5368C25.744 13.7663 26.1927 14.8496 25.6864 15.6805C24.9027 16.9667 26.3746 18.4386 27.6608 17.6549C28.4917 17.1486 29.575 17.5974 29.8045 18.5429C30.1599 20.0065 32.2415 20.0065 32.5968 18.5429C32.8264 17.5974 33.9096 17.1486 34.7405 17.6549C36.0268 18.4386 37.4987 16.9667 36.715 15.6805C36.2087 14.8496 36.6574 13.7663 37.6029 13.5368C39.0666 13.1814 39.0666 11.0998 37.6029 10.7445C36.6574 10.5149 36.2087 9.43167 36.715 8.60078C37.4987 7.31454 36.0268 5.84262 34.7405 6.62633C33.9096 7.1326 32.8264 6.6839 32.5968 5.73838ZM31.2007 14.9531C32.754 14.9531 34.0132 13.6939 34.0132 12.1406C34.0132 10.5873 32.754 9.32813 31.2007 9.32813C29.6474 9.32813 28.3882 10.5873 28.3882 12.1406C28.3882 13.6939 29.6474 14.9531 31.2007 14.9531Z\" fill=\"#7A9EB8\"/>\n        <defs>\n            <clipPath id=\"clip0_0_1\">\n                <rect width=\"24\" height=\"24\" fill=\"white\" transform=\"translate(0.000488281 0.140625)\"/>\n            </clipPath>\n        </defs>\n    </svg>\n\n</template>\n","<template>\n    <div class=\"flex flex-wrap overflow-hidden mx-[24px]\">\n        <panel  @click='selected(0)' text=\"It was empty\">\n            <template #svg>\n                <empty-svg/>\n            </template>\n        </panel>\n        <panel @click='selected(1)' text=\"Something was in it\">\n            <template #svg>\n                <in-it/>\n            </template>\n        </panel>\n        <panel  @click='selected(2)' text=\"Something's wrong\">\n            <template #svg>\n                <wrong/>\n            </template>\n        </panel>\n        <panel  v-if=\"coordinator\" @click='dialogVisible = !dialogVisible' text=\"Re-map QR\">\n            <template #svg>\n                <remap/>\n            </template>\n        </panel>\n\n    </div>\n    <el-dialog\n        v-model=\"dialogVisible\"\n        title=\"Install QR for Trap\"\n        width=\"90%\"\n    >\n        <div class=\"flex justify-center\">\n            <el-select v-model=\"val\" filterable placeholder=\"Select\" class=\"w-full\">\n                <el-option\n                    v-for=\"item in qrs\"\n                    :key=\"item.qr_code\"\n                    :label=\"item.qr_code\"\n                    :value=\"item.qr_code\"\n                />\n            </el-select>\n        </div>\n\n        <template #footer>\n      <span class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">Cancel</el-button>\n        <el-button type=\"primary\" @click=\"remap\"\n        >Confirm</el-button\n        >\n      </span>\n        </template>\n    </el-dialog>\n</template>\n\n<script>\nimport EmptySvg from \"@/Components/SVG/EmptySvg.vue\";\nimport InIt from \"@/Components/SVG/InIt.vue\";\nimport Wrong from \"@/Components/SVG/Wrong.vue\";\nimport Remap from \"@/Components/SVG/Remap.vue\";\nimport Panel from \"@/Components/Panel.vue\"\n\nexport default {\n    props:{\n        qrs:Object,\n        coordinator:Boolean\n    },\n    name: \"StepOne\",\n    components:{\n        Panel,\n        Wrong,\n        InIt,\n        EmptySvg,\n        Remap,\n    },\n    data() {\n        return {\n            dialogVisible: false,\n            val:null,\n            values:[\n                {strikes:0,species_caught:\"None\",trap_condition: \"Ok\",words: \"The trap caught nothing, \", step:2},\n                {\n                    strikes: 0,\n                    status: 'Sprung',\n                    trap_condition: 'Ok',\n                    words: 'The trap caught a ',\n                    step:3\n                },\n                {\n                    strikes: 0,\n                    species_caught: 'None',\n                    rebaited: 'No',\n                    bait_type: 'None',\n                    words: \"Something is wrong with itâ€¦\",\n                    step:4\n                }\n            ]\n        }\n    },\n    methods:{\n        selected (val){\n            this.$emit('selected',this.values[val])\n        },\n        remap(){\n            this.$emit('remap',this.val)\n            this.dialogVisible = false\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n    <svg width=\"26\" height=\"22\" viewBox=\"0 0 26 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M2.1958 12.1828L10.0259 20.0128L23.8046 2.26758\" stroke=\"#00BF8C\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    </svg>\n</template>\n","<template>\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M17.9673 2.17383L2.03271 18.1084M2.03271 2.17383L17.9673 18.1084\" stroke=\"#D44944\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    </svg>\n</template>\n","<template>\n    <svg width=\"30\" height=\"21\" viewBox=\"0 0 30 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M2.8 17.8592L2.0625 16.5703\" stroke=\"#8A8A8A\" stroke-opacity=\"0.75\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n        <path d=\"M1.2479 12.2554C1.27873 11.7343 1.30392 11.2122 1.50443 10.7539\" stroke=\"#8A8A8A\" stroke-opacity=\"0.6\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n        <path d=\"M3.64164 6.55562C3.91362 6.13556 4.19257 5.73202 4.47867 5.329\" stroke=\"#8A8A8A\" stroke-opacity=\"0.4\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n        <path d=\"M8.6712 3.98398C9.20911 3.87221 9.71565 3.77335 10.2557 3.79472\" stroke=\"#8A8A8A\" stroke-opacity=\"0.4\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n        <path d=\"M14.5306 3.07947C15.9557 2.53785 15.8347 2.42184 16.3771 2.27188\" stroke=\"#8A8A8A\" stroke-opacity=\"0.4\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n        <path d=\"M21.0293 1.90625C21.8848 1.95837 22.63 1.98675 23.3712 2.50281\" stroke=\"#8A8A8A\" stroke-opacity=\"0.4\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n        <path d=\"M25.7607 4.68066C26.2043 5.29622 26.2043 5.29622 26.7349 6.17083\" stroke=\"#8A8A8A\" stroke-opacity=\"0.4\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n        <path d=\"M28.1499 10.2588C28.2145 10.8528 28.2489 11.4309 28.277 12.0275\" stroke=\"#8A8A8A\" stroke-opacity=\"0.6\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n        <path d=\"M6.13184 18.709L7.50954 18.7635\" stroke=\"#8A8A8A\" stroke-opacity=\"0.85\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n        <path d=\"M10.6586 18.8877C11.2641 18.8736 11.8211 18.8701 12.4325 18.8943\" stroke=\"#8A8A8A\" stroke-opacity=\"0.85\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n        <path d=\"M15.8613 18.9209C16.2536 18.9823 17.3495 19.1183 17.7445 19.1677\" stroke=\"#8A8A8A\" stroke-opacity=\"0.85\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n        <path d=\"M20.8521 19.1885L22.8613 19.3717\" stroke=\"#8A8A8A\" stroke-opacity=\"0.85\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n        <path d=\"M26.0599 18.2377C26.455 17.8732 26.0599 18.2377 27.2426 17.3657\" stroke=\"#8A8A8A\" stroke-opacity=\"0.75\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n    </svg>\n\n</template>\n\n","<template>\n    <svg width=\"22\" height=\"29\" viewBox=\"0 0 22 29\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M20.9532 16.2987C16.2797 20.1716 13.0899 23.2078 9.34703 26.1742C9.32577 24.91 9.31661 25.0581 9.32577 24.91C9.43801 23.0942 9.39328 21.3532 9.12684 19.5403C8.96396 18.4321 7.87665 20.5861 7.32627 20.9674C5.51274 23.5395 3.62243 24.9568 2.09198 27.3572M1.19139 20.8212C1.27592 20.5553 6.98263 6.80287 7.0026 6.84218C7.76265 8.33838 8.36641 10.4508 8.90718 12.0347C8.99533 12.2928 9.25334 13.567 9.58048 13.7042C10.4174 14.0554 12.2049 8.42035 12.4263 7.91638C12.898 6.84262 14.0757 3.51024 14.7556 1.8457\" stroke=\"#F2B148\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    </svg>\n</template>\n\n","<template>\n    <div class=\"flex flex-wrap overflow-hidden mx-[24px]\">\n        <panel  @click='selected(0)' text=\"Bait is still good\">\n            <template #svg>\n                <good/>\n            </template>\n        </panel>\n        <panel  @click='selected(1)' text=\" Bait was old\">\n            <template #svg>\n                <danger/>\n            </template>\n        </panel>\n        <panel  @click='selected(2)' text=\"Bait was taken\">\n            <template #svg>\n                <circle-dash />\n            </template>\n        </panel>\n        <panel  @click='selected(3)' text=\"Trap was sprung\">\n            <template #svg>\n                <lines/>\n            </template>\n        </panel>\n    </div>\n</template>\n\n<script>\nimport Good from \"@/Components/SVG/Good.vue\";\nimport Danger from \"@/Components/SVG/Danger.vue\";\nimport Circle from \"@/Components/SVG/CircleDash.vue\";\nimport CircleDash from \"@/Components/SVG/CircleDash.vue\";\nimport Lines from \"@/Components/SVG/Lines.vue\";\nimport Panel from \"@/Components/Panel.vue\"\n\nexport default {\n    name: \"StepTwo\",\n    components: {Lines, CircleDash, Circle, Danger, Good, Panel},\n    data() {\n        return {\n            values:[\n                {rebaited:\"No\", status:\"Still set, bait OK\", bait_type: \"None\",words: \"it was still set and the bait was good so I didn\\'t rebait it.\", step:6},\n                {status:\"Still set, bait bad\", words:\"it was still set and the bait was bad, \", step:5},\n                {status:\"Still set, bait missing\", words:\"it was still set and the bait was missing, \", step:5},\n                {status:\"Sprung\", species_caught:\"None\", words:\"it was sprung, \", step:5},\n            ]\n        }\n    },\n    methods:{\n        selected (val){\n            this.$emit('selected',this.values[val])\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n    <svg class=\"dark:text-gray-300\" width=\"19\" height=\"28\" viewBox=\"0 0 19 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M9.72111 2.23191C6.98395 4.94283 4.5424 7.87311 1.99963 10.7631\" stroke=\"#2C8BD1\" stroke-width=\"2.5\" stroke-linecap=\"round\"/>\n        <path d=\"M10.0943 2.00043C12.7565 4.78649 15.1094 7.77638 17.5668 10.7308\" stroke=\"#2C8BD1\" stroke-width=\"2.5\" stroke-linecap=\"round\"/>\n        <path d=\"M10.0088 2.12207C9.90038 10.0133 9.94254 17.909 9.92358 25.8028\" stroke=\"#2C8BD1\" stroke-width=\"2.5\" stroke-linecap=\"round\"/>\n    </svg>\n</template>\n","<template>\n    <svg class=\"dark:text-gray-300 mt-1\" width=\"29\" height=\"20\" viewBox=\"0 0 29 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M1 2.01331C1.58125 2.56346 1.44493 2.57191 2.44664 2.57447C4.06553 2.57862 5.79568 2.21294 7.32609 1.59244C7.59227 1.48451 8.45696 0.712699 8.81423 1.11545C9.29714 1.65985 9.41316 2.64737 9.78656 3.28995C10.7182 4.89325 12.1198 3.3764 13.1067 2.6867C14.1783 1.93784 14.7022 3.07498 15.7391 3.30398C16.9695 3.57572 18.0447 3.06167 19.1779 2.5885C19.798 2.32954 20.0022 2.44017 20.5771 2.71476C21.312 3.0658 21.9475 3.00556 22.7115 2.75685C23.5142 2.49551 24.4344 1.52541 25.2846 1.78884C26.1909 2.06969 27.066 2.13957 28 2.13957\" stroke=\"#8A8A8A\" stroke-width=\"1.5\" stroke-linecap=\"round\"/>\n        <path d=\"M2 17.0433C3.1541 17.6335 4.32159 16.6532 5.46624 16.4508C5.94957 16.3653 6.51183 17.2116 6.83716 17.5199C7.37476 18.0294 7.95917 18.4328 8.61518 18.75C9.73219 19.29 10.4126 18.8953 11.3511 18.1381C11.5639 17.9664 12.386 16.8897 12.716 17.1979C13.0746 17.5326 13.1819 18.0145 13.59 18.3185C14.3729 18.9015 14.9698 18.8042 15.7213 18.2025C16.5244 17.5595 17.317 17.027 18.3494 16.9016C18.9105 16.8335 19.1889 17.1087 19.5647 17.507C19.7798 17.735 20.0298 18.2062 20.3669 17.9836C20.8024 17.6958 21.209 17.2651 21.7019 17.0884C22.1797 16.917 22.482 17.5667 22.9112 17.6551C24.2429 17.9295 26.1653 17.1225 27 16\" stroke=\"#8A8A8A\" stroke-width=\"1.5\" stroke-linecap=\"round\"/>\n        <path d=\"M1 10.1135C1.48607 9.72701 1.61396 9.4776 2.23985 9.58563C3.1015 9.73436 3.76106 10.6005 4.65867 10.5928C5.2799 10.5875 5.83458 10.1905 6.38007 9.89126C6.7385 9.69466 7.53024 9.02058 7.94096 9.53007C8.53595 10.2681 8.65073 10.9296 9.62915 10.9957C10.6129 11.062 11.5023 10.3577 12.2251 9.58563C12.3602 9.44136 13.2892 8.44818 12.9889 8.07143C12.7742 7.80194 12.2996 8.36832 12.1919 8.55764C11.3404 10.0536 13.7846 10.3219 14.3395 10.2247C14.9365 10.12 15.2663 9.68265 15.7786 9.41199C15.9593 9.3165 16.3937 10.2568 16.4982 10.4053C17.3795 11.6576 19.1098 10.5971 20.1181 10.0718C20.3593 9.94621 20.71 9.75677 20.976 9.90515C21.3354 10.1056 21.4259 10.6912 21.845 10.8081C22.6848 11.0423 23.7489 10.5761 24.5738 10.433C25.7121 10.2357 26.8529 10.1615 28 10.1135\" stroke=\"#8A8A8A\" stroke-width=\"1.5\" stroke-linecap=\"round\"/>\n    </svg>\n\n</template>\n","<template>\n    <svg width=\"25\" height=\"21\" viewBox=\"0 0 25 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M3 2C4 3.5 8.74184 7.13881 12 10C15.4196 13.003 19.5664 16.0362 23 19\" stroke=\"#D44944\" stroke-width=\"3\" stroke-linecap=\"round\"/>\n        <path d=\"M21 2C20.067 2.75865 19.2476 3.61938 18.3841 4.49884C15.9516 6.97619 13.2574 9.02791 10.6127 11.1001C7.65845 13.4149 4.5 16 2 19\" stroke=\"#D44944\" stroke-width=\"3\" stroke-linecap=\"round\"/>\n    </svg>\n</template>\n","<template>\n    <svg width=\"33\" height=\"33\" viewBox=\"0 0 33 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M25.716 31.325H2.712C2.12592 31.325 1.65039 30.8498 1.65039 30.2631V7.25912C1.65039 6.67271 2.12592 6.19751 2.712 6.19751H14.2138C14.8002 6.19751 15.2754 6.67304 15.2754 7.25912C15.2754 7.8452 14.7999 8.32073 14.2138 8.32073H3.77394V29.2015H24.6544V18.7609C24.6544 18.1745 25.1299 17.6993 25.716 17.6993C26.3024 17.6993 26.7776 18.1749 26.7776 18.7609V30.2631C26.7779 30.8498 26.3024 31.325 25.716 31.325Z\" fill=\"#286EA2\"/>\n        <path d=\"M31.0394 5.29127L27.7305 1.98566C27.3164 1.57151 26.6441 1.57151 26.23 1.98566L23.2395 4.97975L11.6806 16.5383C11.5849 16.634 11.5074 16.7472 11.4542 16.871L8.98057 22.6503C8.80699 23.0502 8.89906 23.5139 9.20365 23.8181C9.40891 24.0234 9.67786 24.1297 9.95407 24.1297C10.0956 24.1297 10.2372 24.1013 10.3751 24.0448L16.1544 21.5712C16.2782 21.518 16.3917 21.4402 16.4871 21.3448L28.0457 9.7862L31.0397 6.79574C31.4536 6.37763 31.4536 5.70542 31.0394 5.29127ZM11.9743 21.0508L12.9406 18.7998L14.2253 20.0845L11.9743 21.0508ZM15.4852 19.345L13.6804 17.5402L24.0923 7.12805L25.8974 8.93282L15.4852 19.345ZM26.8986 7.93127L25.0938 6.1265L26.9801 4.24022L28.7849 6.04169L26.8986 7.93127Z\" fill=\"#286EA2\"/>\n    </svg>\n</template>\n","<template>\n    <span class=\"w-full px-6 text-[24px] mb-[36px] text-t_black-800 mt-3 dark:text-t_white-200 font-fira font-semibold\">Is this correct?</span>\n    <div class=\"flex flex-wrap overflow-hidden mx-[24px]\">\n        <panel  @click='selected(0)' text=\"Yes, submit inspection\" small_text=\"Submit scan\">\n            <template #svg>\n                <good/>\n            </template>\n        </panel>\n        <panel  @click='selected(7)' text=\"Add note first\">\n            <template #svg>\n                <edit/>\n            </template>\n        </panel>\n        <panel  @click='selected(8)' text=\"No, let me edit\">\n            <template #svg>\n                <no/>\n            </template>\n        </panel>\n    </div>\n</template>\n\n<script>\nimport ArrowUp from \"@/Components/SVG/ArrowUp.vue\";\nimport Note from \"@/Components/SVG/Note.vue\";\nimport Panel from \"@/Components/Panel.vue\"\nimport No from  \"@/Components/SVG/No.vue\";\nimport Edit from \"@/Components/SVG/Edit.vue\";\nimport Good from \"@/Components/SVG/Good.vue\";\n\nexport default {\n    name: \"StepSix\",\n    components: {Edit, Panel, No, Note, ArrowUp,Good},\n    data() {\n        return {\n\n        }\n    },\n    methods:{\n        selected (val){\n            this.$emit('selected',val)\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n    <div class=\"grid grid-cols-2 gap-3 mx-[24px]\" v-if=\"!show_all\">\n        <div v-for=\"(sp, index) in species\" :key=\"index\" @click='selected({ species_caught: sp, words: `${sp}, `, step: 5 })'\n             class=\"grid grid-cols-1 col-1 w-full mx-auto rounded-[4px] dark:bg-t_black-800 px-[10px] py-[8px]\n             justify-items-center bg-white relative\">\n            <span class=\"justify-self-start text-[18px] font-fira font-medium dark:text-t_white-200\">{{sp}}</span>\n            <rat class=\"-mt-[15px]\"  v-if=\"sp === 'Rat'\"/>\n            <mouse  v-if=\"sp === 'Mouse'\"/>\n            <stoat class=\"absolute mt-4\" v-if=\"sp === 'Stoat'\"/>\n            <weasel  v-if=\"sp === 'Weasel'\"/>\n            <hedgehog v-if=\"sp === 'Hedgehog'\"/>\n        </div>\n        <div @click='show_all = true'\n             class=\"grid grid-cols-1 col-1 w-full mx-auto rounded-[4px] dark:bg-t_black-800 px-[10px] py-[8px]\n             justify-items-center bg-white\">\n            <span class=\"text-[18px] font-fira font-medium dark:text-t_white-200 leading-[120%]\">Something else</span>\n            <somthing-else/>\n        </div>\n    </div>\n    <div class=\"flex flex-wrap overflow-hidden mx-[24px]\" v-if=\"show_all\">\n        <panel v-for=\"(sp, index) in extraSpecies\" :key=\"index\" @click='selected({ species_caught: sp, words: `${sp} `, step: 5})' :text=\"sp\"/>\n\n        <div class=\"mb-3 mx-auto\">\n            <Tertiary @click=\"show_all = false\" >Show Less Items</Tertiary>\n        </div>\n    </div>\n</template>\n\n<script>\nimport SomthingElse from \"@/Components/SVG/SomthingElse.vue\";\nimport Rat from \"@/Components/SVG/Animals/Rat.vue\";\nimport Mouse from \"@/Components/SVG/Animals/Mouse.vue\";\nimport Stoat from \"@/Components/SVG/Animals/Stoat.vue\";\nimport Weasel from \"@/Components/SVG/Animals/Weasel.vue\";\nimport Hedgehog from \"@/Components/SVG/Animals/Hedgehog.vue\";\nimport Panel from \"@/Components/Panel.vue\";\nimport Tertiary from \"@/UI/Buttons/Tertiary.vue\";\n\nexport default {\n    props:{\n        sel:String\n    },\n    name: \"StepThree\",\n    components:{\n        Panel,\n        Hedgehog,\n        Weasel,\n        Stoat,\n        Mouse,\n        Rat,\n        SomthingElse,\n        Tertiary\n    },\n    data() {\n        return {\n            show_all:false,\n            species: ['Rat', 'Mouse', 'Stoat', 'Weasel', 'Hedgehog'],\n            extraSpecies: ['Rat - Kiore', 'Rat - Norway', 'Unspecified', 'Bird', 'Rat - Ship', 'Cat', 'Deer', 'Dog', 'Ferret', 'Goat', 'Hare', 'Magpie', 'Peafowl', 'Pig', 'Possum', 'Rabbit', 'Turkey', 'None'],\n        }\n    },\n    methods:{\n        selected (val){\n            this.$emit('selected',val)\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n    <svg width=\"85\" height=\"58\" viewBox=\"0 0 85 58\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g clip-path=\"url(#clip0_2484_2076)\">\n            <path d=\"M32.5128 27.1318C32.5128 27.1318 30.5036 27.7018 30.322 28.2034L28.0517 31.3498C28.0517 31.3498 25.1004 29.7196 24.1015 29.7196C24.1015 29.7196 9.03823 33.9946 8.27769 34.3138C8.27769 34.3138 5.26958 38.6458 4.32742 39.1018C4.32742 39.1018 1.87553 39.535 2.00039 40.4698C2.00039 40.4698 1.80742 45.0754 2.19336 46.0102C2.19336 46.0102 2.81769 48.2902 4.57715 49.0312L19.1409 55.5292C20.208 56.0878 27.5523 53.9446 30.0609 53.1922L45.3171 48.598C47.5193 47.971 57.1226 45.064 58.2577 44.6308C59.3928 44.1862 54.1144 32.296 52.2301 30.9736C50.3458 29.6512 38.2907 26.3224 37.0988 26.4478C35.9069 26.5618 32.5128 27.1318 32.5128 27.1318Z\" fill=\"#A16D4A\"/>\n            <path opacity=\"0.24\" d=\"M7.71034 35.3744C8.34602 35.3174 11.1044 36.0128 12.6141 36.7652C14.1125 37.5176 19.7087 39.467 20.2649 39.7862C20.8325 40.094 21.4001 40.2308 21.4001 42.1118C21.4001 44.0042 21.4682 45.2582 21.4682 45.2582L5.51953 39.2162L7.71034 35.3744Z\" fill=\"black\"/>\n            <path opacity=\"0.38\" d=\"M26.4967 30.654L29.1302 32.364C29.1302 32.364 37.6664 34.6896 38.0978 34.9974C38.8583 35.9208 39.5281 36.9126 40.107 37.9614C40.8675 39.09 41.7075 40.1616 42.627 41.1648L45.5102 40.3554L35.2826 29.4684L32.3313 26.6982L29.6297 28.5792L26.4854 30.654H26.4967Z\" fill=\"black\"/>\n            <path opacity=\"0.25\" d=\"M40.9245 40.3555C40.9245 40.3555 38.9834 36.8899 37.9732 36.4453C37.9732 36.4453 35.5326 36.8215 34.0797 37.1407L23.784 40.0363C23.784 40.0363 22.6488 41.2903 22.5353 42.8635C22.4218 43.6843 22.4218 44.5051 22.5353 45.3259L40.9245 40.3555Z\" fill=\"black\"/>\n            <path opacity=\"0.28\" d=\"M2.43181 41.7922C2.43181 41.7922 3.88478 41.2222 4.25937 41.5414C4.75883 41.8834 5.281 42.1798 5.82586 42.4306C5.82586 42.4306 6.08694 41.8036 6.5864 42.1114C6.5864 42.1114 7.15397 42.1798 7.83505 42.7384C8.77721 43.2856 9.76478 43.7302 10.7864 44.0608C10.7864 44.0608 11.9215 43.6846 12.2394 43.9468C12.7729 44.4484 13.3745 44.9158 13.9875 45.3148C14.6799 45.7024 18.1421 46.3408 18.1421 46.3408C18.1421 46.3408 19.2091 46.3408 19.5156 46.774C19.788 47.0476 20.1059 47.2528 20.4578 47.401L21.275 48.2788C21.0707 48.9628 20.9232 49.6468 20.8323 50.3536C20.9459 50.8096 21.0026 51.2656 21.0253 51.7444L20.7075 53.3062C20.594 53.8192 20.5372 54.3436 20.5259 54.8794L16.6891 54.5032C16.6891 54.5032 9.59451 51.5392 9.21991 51.2314L1.68262 47.1274L2.44316 41.7922H2.43181Z\" fill=\"black\"/>\n            <path opacity=\"0.21\" d=\"M21.3428 54.7652L21.5925 50.4788L21.706 47.9708L23.4768 46.8992L24.6687 48.0962L26.3714 47.207L28.2444 45.953L30.5147 44.699L32.1947 45.1322L34.079 44.129H35.8952C36.372 43.9124 36.8147 43.6388 37.2233 43.3082L39.732 42.8636L40.9239 43.2512L42.059 41.6096H44.3747L45.5098 41.2334L51.0379 45.953L39.2893 49.9202L21.3428 54.7652Z\" fill=\"black\"/>\n            <path opacity=\"0.39\" d=\"M32.0131 27.0752L28.1877 30.2786H25.2364L22.3418 31.0994C22.3418 31.0994 28.2445 32.9234 28.9256 33.2426C28.9256 33.2426 35.0213 35.5682 35.5888 36.1382C36.3267 37.0502 36.9623 38.042 37.4731 39.1022C38.5515 41.1314 39.7434 43.115 41.0488 45.0074C41.6164 45.6344 43.9434 49.1 43.9434 49.1L54.171 46.8314L32.0131 27.0866V27.0752Z\" fill=\"black\"/>\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.718006 45.8623C0.643704 45.1923 0.60581 44.5187 0.604492 43.8445C0.604492 43.3543 0.604492 42.8641 0.627195 42.3625L0.638546 41.2339C0.638546 41.0401 0.638546 40.8349 0.615844 40.6183V40.5727L0.604492 40.4587V40.3789C0.604492 39.9457 0.740708 39.5125 1.00179 39.1591C1.20611 38.8969 1.47855 38.6689 1.77368 38.5093C1.98936 38.3953 2.21638 38.3041 2.45476 38.2357C2.63638 38.1673 2.84071 38.1217 3.04503 38.0533C3.27832 37.9927 3.50614 37.9127 3.72611 37.8139L4.18017 37.2895C4.57747 36.7765 4.96341 36.2635 5.32665 35.7163C5.67855 35.2147 6.04179 34.7131 6.41638 34.2229L6.91584 33.6301C7.14287 33.3679 7.4153 33.1741 7.73314 33.0259C8.06233 32.9005 8.39152 32.7865 8.73206 32.6839L10.5369 32.1139C14.0023 31.0642 17.476 30.0419 20.9575 29.0473L22.8418 28.5457L23.4661 28.3975C23.6931 28.3519 23.9202 28.3177 24.1585 28.3177C25.4753 28.4659 26.7921 28.6597 28.0975 28.9333C28.4494 28.4773 28.7899 28.0099 29.1077 27.5083C29.2213 27.2803 29.3915 27.0979 29.5845 26.9383C29.7321 26.8129 29.891 26.6989 30.0726 26.5963C30.7611 26.254 31.4792 25.9755 32.218 25.7641C33.7857 25.5116 35.3561 25.276 36.9288 25.0573H37.0423L37.1104 25.0459H37.2013C37.3942 25.0459 37.5985 25.0687 37.7915 25.0915L38.4613 25.2055C42.9401 26.2113 47.3467 27.5177 51.6515 29.1157C52.1299 29.3133 52.5896 29.5536 53.025 29.8339C53.2521 29.9935 53.445 30.1759 53.6153 30.3697C53.7969 30.5635 53.9558 30.7687 54.1148 30.9739C54.478 31.4755 54.8072 31.9999 55.1137 32.5471C56.6508 35.2143 57.9463 38.0147 58.9845 40.9147C59.2899 41.7484 59.5402 42.6015 59.7337 43.4683C59.7791 43.6963 59.8018 43.9357 59.8018 44.1751C59.8018 44.4259 59.7791 44.6767 59.6996 44.9047C59.5634 45.3721 59.2115 45.7483 58.7688 45.9307L57.8834 46.2385L56.4758 46.6831L52.5937 47.8801C50.3059 48.5814 48.0128 49.2654 45.7148 49.9321L30.4699 54.5263C28.7218 55.0507 26.9623 55.5523 25.2029 56.0083C23.7791 56.3761 22.3399 56.6804 20.8894 56.9203C20.5148 56.9659 20.1288 57.0001 19.7542 57.0115L19.198 56.9773C18.9823 56.9431 18.7667 56.8861 18.5623 56.7835L4.02125 50.3197C3.15855 49.9663 1.24017 48.7237 1.10395 48.3931C0.990438 48.1423 0.740708 46.0789 0.706654 45.8623H0.718006ZM19.6407 54.2185L4.99747 47.9143C4.49062 47.7192 4.02756 47.4247 3.6353 47.0479C3.53314 46.8997 3.43098 45.1669 3.41963 45.0415C3.37961 43.7878 3.37961 42.5332 3.41963 41.2795V40.8463L3.73747 40.7665C4.13476 40.6525 4.53206 40.5157 4.91801 40.3561C5.2472 40.1965 5.53098 39.9685 5.76936 39.7063C5.99638 39.4783 6.18936 39.2503 6.38233 38.9995C6.80233 38.4523 7.22233 37.8823 7.61963 37.3123C8.03427 36.7091 8.47356 36.1234 8.93638 35.5567C9.73707 35.3012 10.5393 35.0504 11.3429 34.8043C14.7908 33.7432 18.2494 32.7172 21.718 31.7263C22.5087 31.5097 23.3034 31.3083 24.1018 31.1221C25.7818 31.3159 27.4618 31.6123 29.0964 32.0113C29.9704 31.0993 30.765 30.0961 31.4348 29.0359C31.8802 28.8268 32.3391 28.6478 32.8083 28.5001L34.5791 28.2151C35.4531 28.0669 36.3272 27.9415 37.1899 27.8389H37.2126H37.1899L37.3715 27.8503C37.5531 27.8845 37.7461 27.9073 37.9277 27.9529C38.4953 28.0669 39.0402 28.1809 39.5964 28.3177C42.723 29.0862 45.8137 29.9953 48.8591 31.0423C49.6389 31.3155 50.4076 31.6197 51.1634 31.9543L51.4245 32.1139L51.538 32.2279C51.966 32.7706 52.3566 33.3419 52.7072 33.9379C53.4305 35.1974 54.0934 36.4908 54.6937 37.8139C55.316 39.1398 55.8767 40.4941 56.3737 41.8723C56.5667 42.3739 56.7369 42.8983 56.8731 43.4341L56.9185 43.6165L55.6472 44.0155C54.3645 44.4259 53.0818 44.8135 51.7877 45.2011C49.5061 45.9079 47.2245 46.5919 44.9315 47.2531L29.664 51.8587C27.9613 52.3717 26.2358 52.8619 24.5104 53.2951C23.1834 53.6362 21.8428 53.9214 20.4921 54.1501C20.231 54.1957 19.9812 54.2071 19.7202 54.2185H19.6407Z\" fill=\"#463E3E\"/>\n            <path d=\"M45.317 3.03191C42.3203 2.83811 32.4673 7.30691 30.6965 8.61791C28.937 9.94031 26.1787 12.0151 25.4181 13.4059C24.6689 14.7853 23.3522 16.4269 23.477 17.9317C23.5905 19.4479 26.1787 21.0781 28.1197 22.6513C30.0608 24.2245 51.0949 44.4253 52.9792 46.1923C54.8635 47.9593 60.8343 54.5029 62.083 55.0045C63.3316 55.5061 73.5705 50.6611 75.33 49.7149C77.0895 48.7687 81.7322 46.6369 82.1749 46.3177C82.6176 45.9985 82.3678 42.1681 82.5495 41.2219C82.7424 40.2757 81.4143 38.0071 81.2327 36.8785C81.0511 35.7385 81.4257 34.8037 80.4835 33.4129C79.5414 32.0335 66.8619 20.4511 65.9197 20.4511C64.9776 20.4511 62.9003 22.0243 62.4008 21.8989C61.9014 21.7735 60.3235 21.0781 60.3235 19.4479C60.3235 17.8063 60.5165 16.3015 59.5743 14.9791C58.6322 13.6681 48.4046 3.14591 45.3284 3.02051L45.317 3.03191Z\" fill=\"#A16D4A\"/>\n            <path opacity=\"0.16\" d=\"M59.3247 21.0898L42.8652 28.4542L44.8858 30.9736L50.4025 27.2572L63.0252 22.606L59.3247 21.0898Z\" fill=\"white\"/>\n            <path opacity=\"0.22\" d=\"M34.7154 12.7908C36.6565 14.364 41.9916 19.4028 42.5024 19.893C43.0019 20.406 43.6943 22.287 43.6943 23.427C43.5808 24.8406 43.3878 26.2428 43.1268 27.645L42.8089 29.1498L26.043 13.851L29.9365 9.57595L30.8786 9.39355L34.7154 12.7908Z\" fill=\"black\"/>\n            <path opacity=\"0.23\" d=\"M44.5684 30.9735L49.597 27.8271C50.1646 27.5079 51.0386 26.4477 52.5484 27.8271C54.0467 29.2065 61.6521 36.5139 62.844 37.4601C64.1835 38.4861 64.8192 40.1961 64.4673 41.8605C64.0927 43.6845 63.4002 48.0963 63.4002 48.0963L62.6511 47.9025L49.6538 35.9439L44.5684 30.9735Z\" fill=\"black\"/>\n            <path opacity=\"0.24\" d=\"M59.7557 16.3698C59.7557 16.3698 59.1881 15.9936 57.633 16.4952L46.2021 21.0438C45.5551 21.0894 45.033 21.591 44.9535 22.2408C44.6924 23.244 43.8184 27.9636 43.8184 27.9636L60.3232 20.7816L59.7557 16.3812V16.3698Z\" fill=\"black\"/>\n            <path opacity=\"0.26\" d=\"M79.7911 34.1201C79.7911 34.1201 68.3036 38.9081 67.6792 39.3413C67.6792 39.3413 66.2263 40.2305 66.0446 41.1083L64.4668 47.9711L81.7322 40.3559L80.6084 35.6363L79.7911 34.1201Z\" fill=\"black\"/>\n            <path opacity=\"0.26\" d=\"M58.4397 14.8654C58.4397 14.8654 45.7602 20.269 44.7045 19.8358C44.7045 19.8358 41.4921 17.4418 41.2424 17.0656C41.2424 17.0656 39.9256 15.4924 40.3683 15.7432C40.3683 15.7432 43.8191 18.1942 44.8181 18.3196C44.8181 18.3196 47.2018 18.0118 49.4721 16.9402C49.4721 16.9402 56.5667 13.7254 57.3045 13.4746L58.3262 14.3638L58.4397 14.8654Z\" fill=\"white\"/>\n            <path opacity=\"0.16\" d=\"M79.3483 32.3647C79.3483 32.3647 66.6008 37.7683 65.5337 37.3351C64.2453 36.6 63.0807 35.6651 62.0829 34.5649C61.8332 34.1203 60.7662 32.9917 61.2089 33.2425C61.6402 33.4933 64.6597 35.6365 65.6586 35.8189C66.6689 36.0127 68.0424 35.5111 70.3126 34.4395C72.5716 33.3679 77.4072 31.2247 78.1564 30.9739C78.9056 30.7231 79.1667 31.8517 79.1667 31.8517L79.3483 32.3647Z\" fill=\"white\"/>\n            <path opacity=\"0.06\" d=\"M63.1617 54.0133L63.3434 50.8669C63.7066 50.2513 64.2515 49.7611 64.9099 49.4761C65.4774 49.3507 66.8623 49.4191 67.112 49.2253C67.3617 49.0315 68.0542 48.0283 68.6785 47.7775C69.3596 47.5495 70.0407 47.3785 70.7558 47.2759C71.1304 47.2759 72.3223 46.3297 72.6969 46.1359L73.9455 45.6343C74.2634 45.6685 74.5926 45.6457 74.899 45.5773C75.1488 45.3835 75.5801 44.5057 76.4655 44.3803L78.2817 44.1865C78.2817 44.1865 79.4169 43.2403 79.6666 43.1149C80.1888 42.8755 80.7336 42.7045 81.3012 42.6133C81.6758 42.7501 82.0277 42.9211 82.3682 43.1149L82.2434 46.6489L64.0358 55.1989L63.1504 54.0133H63.1617Z\" fill=\"black\"/>\n            <path opacity=\"0.13\" d=\"M24.6694 14.9909C24.9759 14.9225 26.4856 14.8655 26.8602 15.5609C27.2461 16.2449 27.3142 17.3849 27.6207 17.4989C28.1202 17.6129 28.6083 17.8067 29.0624 18.0689C29.8115 18.3881 32.7629 20.8391 32.9559 21.3407C33.1375 21.8537 33.0694 22.7885 33.7051 23.1647C34.4088 23.4839 35.1126 23.7575 35.8391 23.9855C36.5997 24.3047 38.9834 26.8241 39.6078 27.8273C40.7018 29.2587 41.9676 30.5491 43.3764 31.6691C45.1206 32.9577 46.7569 34.3875 48.2688 35.9441C48.7797 36.5711 49.4607 38.1443 49.8467 38.2127C51.0159 38.8739 52.117 39.6491 53.1045 40.5383C53.4791 40.9829 54.6824 42.8639 55.4883 43.1831C56.9377 44.1542 58.2477 45.3203 59.3818 46.6487C59.8359 47.5835 60.5624 48.3701 61.4591 48.9059C62.0834 49.1339 62.617 49.5443 62.9688 50.1029C63.0256 50.3537 62.5942 54.8225 62.5942 54.8225L27.2915 22.0361L23.2051 16.7465L23.0234 14.4209L24.658 14.9909H24.6694Z\" fill=\"black\"/>\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M62.4801 20.4513C62.7185 20.3373 62.9569 20.2233 63.1839 20.0865C63.5812 19.8585 63.9785 19.6533 64.3985 19.4709C64.6142 19.3683 64.8298 19.2885 65.0682 19.2087C65.3406 19.1175 65.6358 19.0719 65.9309 19.0719C66.1579 19.0719 66.4077 19.1289 66.612 19.2315L66.9525 19.4025C67.7791 19.9774 68.5819 20.5859 69.359 21.2265C73.2346 24.5131 76.9942 27.9352 80.6309 31.4865C80.9698 31.8579 81.2991 32.238 81.6185 32.6265C82.2944 33.5861 82.6265 34.7475 82.5606 35.9211C82.5557 36.1689 82.5709 36.4167 82.6061 36.6621C82.6515 36.8445 82.6969 37.0269 82.765 37.2093L83.1396 38.1441C83.3212 38.5887 83.5028 39.0447 83.6617 39.5121C83.824 39.9955 83.9269 40.497 83.9682 41.0055C83.9682 41.1651 83.9569 41.3133 83.9228 41.4615C83.8871 42.0651 83.8644 42.6695 83.8547 43.2741C83.8547 43.9581 83.8547 44.6421 83.8093 45.3147C83.7763 45.7776 83.6964 46.236 83.5709 46.6827C83.4574 47.0019 83.2531 47.2755 82.9807 47.4693C81.9304 48.0306 80.8668 48.5666 79.7909 49.0767L77.6682 50.1027L75.9769 50.9691C73.8469 52.0401 71.6894 53.055 69.5066 54.0129C68.1785 54.5943 66.8277 55.1529 65.4542 55.6545C64.6687 55.9354 63.8693 56.1751 63.059 56.3727C62.832 56.4183 62.605 56.4411 62.3779 56.4525C62.1055 56.4525 61.8217 56.4069 61.5606 56.3157C61.2996 56.2017 61.0612 56.0535 60.8342 55.8711C60.047 55.2298 59.2894 54.5527 58.5639 53.8419C57.2925 52.5879 56.0439 51.3225 54.8066 50.0343C54.2731 49.4643 53.7282 48.9285 53.1947 48.3699C52.8088 47.9823 52.4228 47.5947 52.0255 47.2299L51.7985 47.0133C44.8578 40.52 37.9748 33.9647 31.1504 27.3483C29.7149 25.9477 28.2921 24.5341 26.8823 23.1075C25.8493 22.0815 24.839 21.0099 23.8628 19.9155C23.429 19.4341 23.0235 18.9279 22.6482 18.3993C22.5006 18.1713 22.3985 17.9091 22.3644 17.6469C22.1131 15.8388 22.4558 13.9977 23.3406 12.4029C23.5677 12.0153 23.8628 11.6619 24.2033 11.3541C24.5439 11.0463 24.8958 10.7613 25.2817 10.4877C26.0763 9.92908 26.8936 9.39328 27.7336 8.89168C28.4639 8.44614 29.1831 7.9824 29.8904 7.50088C30.253 7.24067 30.6322 7.00456 31.0255 6.79408C31.5477 6.49768 32.0812 6.22408 32.6147 5.95048C35.4442 4.56334 38.3645 3.37118 41.3552 2.38228C42.0136 2.17708 42.6833 1.99468 43.3644 1.85788C43.932 1.72108 44.5223 1.64128 45.1012 1.62988H45.419C45.7596 1.66408 46.1228 1.74388 46.452 1.85788C46.7925 1.97188 47.1331 2.13148 47.4396 2.29108C48.1774 2.70148 48.8812 3.14608 49.5509 3.64768C51.1547 4.87882 52.7074 6.17572 54.205 7.53508C56.1496 9.33474 58.0276 11.2056 59.8352 13.1439C60.1417 13.4745 60.4255 13.8051 60.6979 14.1699C61.1293 14.7741 61.4358 15.4695 61.572 16.1991C61.6855 16.8375 61.7536 17.4759 61.7309 18.1143V19.4709C61.7309 19.6077 61.7536 19.7331 61.8104 19.8699C61.8785 19.9839 61.9693 20.0979 62.0715 20.1891C62.2077 20.3031 62.3325 20.3829 62.4801 20.4513ZM81.1758 41.0169C81.119 41.3589 81.0963 41.7009 81.0963 42.0429C81.0829 42.4608 81.0753 42.8788 81.0736 43.2969C81.0736 43.9125 81.0736 44.5509 81.0282 45.1665L81.0169 45.3831L80.5401 45.6111L78.5877 46.5687C77.2861 47.2032 75.9882 47.8454 74.6942 48.4953C72.6205 49.5388 70.5198 50.5271 68.3942 51.4593C67.1115 52.0293 65.806 52.5537 64.4893 53.0325C63.8465 53.2708 63.1909 53.4725 62.5255 53.6367H62.4915L62.0033 53.2377C61.5039 52.8045 61.0044 52.3257 60.5277 51.8697C59.2677 50.6271 58.0304 49.3617 56.8158 48.1077L55.1812 46.4205C54.7011 45.9259 54.2091 45.4431 53.7055 44.9727C46.77 38.501 39.8946 31.9647 33.0801 25.3647C31.6612 23.9625 30.2423 22.5603 28.8461 21.1467C27.8397 20.1386 26.8594 19.1046 25.9061 18.0459C25.6336 17.7495 25.3839 17.4417 25.1342 17.1339L25.0774 17.0541C24.9678 15.9256 25.1971 14.7901 25.7358 13.7937C25.8379 13.6569 25.9401 13.5315 26.065 13.4289C26.3147 13.2009 26.5871 12.9729 26.8596 12.7791C27.6088 12.2547 28.3693 11.7531 29.1525 11.2971C29.5725 11.0349 29.9925 10.7841 30.4012 10.5105C30.7871 10.2825 31.1504 10.0317 31.5136 9.75808C32.2687 9.28871 33.0452 8.85504 33.8406 8.45848C36.5369 7.1288 39.3208 5.98613 42.1725 5.03848C42.7628 4.86748 43.3644 4.69648 43.9661 4.58248C44.3406 4.47988 44.7379 4.43428 45.1239 4.42288H45.2488C45.3396 4.42288 45.419 4.45708 45.5098 4.47988L46.1228 4.75348C46.7358 5.09548 47.3261 5.47168 47.8823 5.89348C48.6201 6.42928 49.3352 6.98788 50.039 7.58068C52.761 9.92945 55.3529 12.426 57.8034 15.0591C58.0304 15.2871 58.2574 15.5493 58.4504 15.8115C58.6433 16.0851 58.7909 16.4157 58.8477 16.7463C58.9271 17.1795 58.9612 17.6127 58.9612 18.0573V18.0687L58.9498 18.7413L58.9385 19.4367V19.4481C58.9361 19.995 59.0551 20.5356 59.2868 21.0305C59.5185 21.5255 59.8571 21.9624 60.2779 22.3095C60.7877 22.7514 61.3886 23.0745 62.0374 23.2557L62.2531 23.3013H62.5255C62.7525 23.3013 62.9796 23.2557 63.1839 23.1873L63.6379 22.9935L64.5461 22.5261C64.8752 22.3323 65.2158 22.1613 65.5677 22.0017L65.7266 21.9333L65.9536 22.0815C66.4985 22.4919 67.0434 22.9251 67.5655 23.3583C71.3723 26.5888 75.0638 29.9539 78.6331 33.4473L79.1552 34.0059L79.3482 34.2339C79.5071 34.4847 79.632 34.7469 79.7115 35.0319C79.7569 35.3169 79.7796 35.6019 79.7796 35.8983C79.7564 36.6849 79.8915 37.4681 80.1769 38.2011C80.2904 38.5431 80.4266 38.8851 80.5742 39.2271C80.7889 39.7625 80.982 40.3063 81.1531 40.8573L81.1758 41.0169Z\" fill=\"#463E3E\"/>\n            <path d=\"M59.5746 23.8602C59.5746 23.8602 64.7281 21.66 65.0346 21.7854C65.8405 22.3326 66.6238 22.9254 67.3616 23.5524C67.6567 24.1224 67.9065 24.7038 68.1108 25.308L60.3919 26.6988C60.267 26.6988 58.2578 25.1826 58.2578 25.1826L59.5746 23.8602Z\" fill=\"#A16D4A\"/>\n        </g>\n        <defs>\n            <clipPath id=\"clip0_2484_2076\">\n                <rect width=\"84\" height=\"57\" fill=\"white\" transform=\"translate(0.501953 0.866211)\"/>\n            </clipPath>\n        </defs>\n    </svg>\n</template>\n","<template>\n    <svg width=\"45\" height=\"65\" viewBox=\"0 0 45 65\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g clip-path=\"url(#clip0_2484_2136)\">\n            <path d=\"M8.14199 14.7361L3.89199 22.2661L3.79199 28.1561L41.432 27.5561L42.552 23.2761L38.452 18.6461L37.482 14.4961L8.14199 14.7361Z\" fill=\"#C8A869\"/>\n            <path d=\"M18.1418 27.1955C20.4018 27.4155 24.7218 25.0655 26.9818 25.5455C29.2518 26.0255 30.1618 27.2455 31.4318 27.0655C32.6918 26.8955 34.6118 26.0655 36.1818 25.4655C37.7518 24.8455 39.4918 25.1555 40.1418 24.8455C40.8018 24.5455 42.8418 23.5055 42.8418 23.5055L43.2818 25.2055L43.5818 51.5255C43.7418 54.9655 43.3318 57.5055 42.3718 59.1455C40.9218 61.6055 29.4718 63.1855 22.8718 63.2955C16.2718 63.3955 5.19181 61.9955 3.01181 60.0655C1.55181 58.7655 1.06181 55.7355 1.53181 50.9455L1.71181 24.7655L2.14181 23.0655C2.14181 23.0655 4.41181 22.4655 5.32181 23.0655C5.32181 23.0655 8.33181 25.5455 9.68181 25.6355C9.68181 25.6355 12.5118 24.8055 12.9918 25.1955C13.4718 25.5955 16.4418 27.0255 18.1418 27.1955Z\" fill=\"#D7AF6F\"/>\n            <path opacity=\"0.21\" d=\"M22.262 21.6957C30.802 21.6957 37.722 19.5357 37.722 16.8757C37.722 14.2157 30.802 12.0557 22.262 12.0557C13.722 12.0557 6.79199 14.2157 6.79199 16.8757C6.79199 19.5357 13.722 21.6957 22.262 21.6957Z\" fill=\"#5B431A\"/>\n            <path d=\"M5.63184 7.41582V12.9758C5.63184 12.9758 5.72183 17.8058 22.4118 17.6758C39.1018 17.5458 39.1418 12.9758 39.1418 12.9758V7.40582C39.1418 7.40582 38.7118 2.71582 22.4118 2.71582C6.11184 2.71582 5.63184 7.41582 5.63184 7.41582Z\" fill=\"#EAD870\"/>\n            <path d=\"M9.68234 11.1054H8.85234V15.8254H9.68234V11.1154V11.1054ZM12.3023 12.0554H11.3423V16.4754H12.3023V12.0554ZM14.4823 12.7554H13.5223V17.1654H14.4823V12.7654V12.7554ZM17.4423 12.9754H16.4823V17.3754H17.4423V12.9754ZM21.5023 13.2354H20.5323V17.6454H21.5023V13.2354ZM25.5023 13.2354H24.5423V17.6454H25.5023V13.2354ZM28.4623 12.9754H27.5123V17.3754H28.4623V12.9754ZM31.1223 12.4954H30.1623V16.9054H31.1223V12.4954ZM33.5623 12.0554H32.6023V16.4754H33.5623V12.0554ZM35.5723 11.2754H34.6123V15.6854H35.5723V11.2854V11.2754ZM37.7523 10.2754H36.7923V14.6854H37.7523V10.2854V10.2754ZM8.11234 10.2754H7.15234V14.6854H8.11234V10.2854V10.2754Z\" fill=\"#C3AF38\"/>\n            <path d=\"M38.9716 31.0254C35.1716 32.4254 29.1716 33.3354 22.4116 33.3354C18.1316 33.3554 13.2016 33.3954 8.43164 31.4354V51.4454C9.31164 51.8754 10.0816 52.1954 10.7316 52.4154C11.7316 52.7454 15.9616 53.7354 23.0016 53.9354C29.7616 53.9354 35.3516 52.8854 39.1416 51.4954L38.9716 31.0254Z\" fill=\"#CC5439\"/>\n            <path d=\"M23.3919 9.29609C30.6919 9.29609 36.6119 8.21609 36.6119 6.89609C36.6119 5.56609 30.6919 4.49609 23.3919 4.49609C16.0919 4.49609 10.1719 5.56609 10.1719 6.89609C10.1719 8.21609 16.0919 9.29609 23.3919 9.29609Z\" fill=\"white\" fill-opacity=\"0.4\"/>\n            <path d=\"M11.2016 61.5759L11.1216 27.3759C11.1216 23.9359 14.6916 21.4159 14.6916 19.4559V17.3659L14.5216 17.1959H13.5216L6.80164 14.7559L6.67164 18.0159L1.71164 23.1559L1.18164 36.3759L1.76164 58.8259L8.00164 60.6559L11.2016 61.5759Z\" fill=\"black\" fill-opacity=\"0.1\"/>\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.48242 7.84546C4.49242 7.24546 4.70242 6.64546 5.08242 6.17546C5.43242 5.71546 5.86242 5.32546 6.35242 5.02546C6.90242 4.67546 7.48242 4.37546 8.09242 4.13546C8.79242 3.84546 9.52242 3.60546 10.2624 3.40546C11.1124 3.17546 11.9624 2.97546 12.8324 2.81546C13.8024 2.63546 14.7824 2.48546 15.7624 2.37546C17.9624 2.11546 20.1824 1.99546 22.4124 2.00546C24.6324 1.99546 26.8524 2.11546 29.0524 2.37546C30.0324 2.48546 31.0124 2.63546 31.9824 2.81546C32.8424 2.97546 33.7024 3.17546 34.5524 3.41546C35.2924 3.61546 36.0124 3.84546 36.7224 4.13546C37.3324 4.37546 37.9224 4.67546 38.4624 5.03546C38.9524 5.33546 39.3824 5.71546 39.7424 6.17546C40.1124 6.65546 40.3224 7.23546 40.3424 7.84546C40.3288 8.45246 40.1182 9.03857 39.7424 9.51546C39.3824 9.96546 38.9424 10.3555 38.4624 10.6555C37.9124 11.0055 37.3324 11.3055 36.7224 11.5455C36.0224 11.8255 35.2924 12.0755 34.5524 12.2755C32.7512 12.7724 30.9114 13.1169 29.0524 13.3055C23.6524 13.9317 18.1906 13.7835 12.8324 12.8655C11.9683 12.7029 11.1109 12.5061 10.2624 12.2755C9.52574 12.0738 8.80122 11.83 8.09242 11.5455C7.48601 11.3035 6.90349 11.0056 6.35242 10.6555C5.86242 10.3555 5.43242 9.96546 5.07242 9.51546C4.70024 9.0373 4.49321 8.4513 4.48242 7.84546ZM6.86242 7.84546C6.87418 7.772 6.90524 7.70298 6.95242 7.64546C7.14242 7.39546 7.36242 7.19546 7.62242 7.04546C8.05242 6.75546 8.50242 6.52546 8.98242 6.34546C9.60206 6.09065 10.2366 5.87358 10.8824 5.69546C11.6824 5.47546 12.4724 5.29546 13.2724 5.14546C18.3965 4.27077 23.6193 4.13271 28.7824 4.73546C29.7124 4.83546 30.6324 4.97546 31.5424 5.14546C32.3424 5.29546 33.1424 5.47546 33.9224 5.69546C34.5724 5.87546 35.2224 6.08546 35.8424 6.33546C36.3124 6.53546 36.7624 6.75546 37.1924 7.03546C37.4524 7.19546 37.6824 7.39546 37.8624 7.63546C37.9124 7.69546 37.9424 7.76546 37.9624 7.83546C37.9506 7.91382 37.9158 7.98691 37.8624 8.04546C37.6824 8.28546 37.4624 8.48546 37.1924 8.64546C36.7624 8.92546 36.3124 9.15546 35.8424 9.34546C34.4457 9.86661 33.0072 10.2681 31.5424 10.5455C28.5264 11.0613 25.4723 11.3222 22.4124 11.3255C20.2724 11.3155 18.1524 11.1955 16.0324 10.9555C15.1124 10.8455 14.1924 10.7055 13.2724 10.5355C12.4724 10.3855 11.6724 10.2055 10.8924 9.98546C10.2434 9.81099 9.60555 9.59726 8.98242 9.34546C8.50698 9.15784 8.0514 8.92335 7.62242 8.64546C7.36641 8.48525 7.13979 8.28231 6.95242 8.04546C6.90639 7.98724 6.87547 7.91853 6.86242 7.84546Z\" fill=\"#4F4F4F\"/>\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22.4024 1.51562C24.2424 1.51562 26.0724 1.58562 27.9024 1.72562C29.3124 1.82562 30.7224 2.02562 32.1124 2.27562C33.1724 2.47562 34.2124 2.73562 35.2324 3.06562C36.0024 3.31562 36.7324 3.63562 37.4524 4.01562C37.9824 4.29562 38.4724 4.63563 38.9224 5.01563C39.2624 5.31563 39.5524 5.63562 39.8024 5.99563C39.9724 6.24563 40.1024 6.51562 40.2124 6.79562C40.2624 6.94562 40.3124 7.09562 40.3224 7.25562L40.3324 7.40562V13.0356C40.3246 13.1949 40.2977 13.3527 40.2524 13.5056C40.1724 13.8056 40.0424 14.0656 39.8824 14.3256C39.6524 14.6856 39.3624 15.0256 39.0424 15.3156C38.6024 15.7056 38.1224 16.0456 37.6024 16.3156C36.9024 16.6956 36.1624 17.0156 35.4024 17.2556C34.3824 17.5956 33.3424 17.8556 32.2824 18.0556C30.8724 18.3156 29.4424 18.5056 28.0224 18.6156C26.1524 18.7656 24.2824 18.8556 22.4224 18.8556H21.7524C19.9524 18.8656 18.1524 18.7956 16.3524 18.6556C14.9724 18.5456 13.6124 18.3556 12.2524 18.1056C11.2211 17.9126 10.2051 17.6453 9.21238 17.3056C8.48238 17.0656 7.77238 16.7356 7.09238 16.3556C6.58238 16.0756 6.11238 15.7256 5.69238 15.3256C5.37238 15.0256 5.09238 14.6856 4.87238 14.3256C4.63743 13.9318 4.49072 13.4917 4.44238 13.0356V7.24563C4.53374 6.79773 4.71395 6.37268 4.97238 5.99563C5.23238 5.63562 5.53238 5.29563 5.87238 5.01563C6.32238 4.63563 6.81238 4.28562 7.35238 4.01562C8.05238 3.63562 8.80238 3.31562 9.57238 3.06562C10.5924 2.73562 11.6424 2.46562 12.7024 2.26562C14.0924 2.01562 15.5024 1.83562 16.9124 1.72562C18.7424 1.58562 20.5724 1.52562 22.4124 1.52562L22.4024 1.51562ZM6.83238 12.8956V7.55562L6.94238 7.35562C7.08238 7.15562 7.24238 6.97563 7.42238 6.82562C7.74238 6.54562 8.10238 6.30562 8.47238 6.10562C9.07238 5.79562 9.67238 5.52563 10.3224 5.32563C11.2324 5.02563 12.1824 4.78563 13.1324 4.61563C14.4524 4.36563 15.7724 4.19563 17.1124 4.09563C20.6434 3.81304 24.1914 3.81304 27.7224 4.09563C29.0524 4.19563 30.3824 4.36563 31.6924 4.61563C32.6524 4.78563 33.5924 5.01562 34.5024 5.31562C35.1324 5.52562 35.7524 5.78562 36.3324 6.10562C36.7124 6.30562 37.0624 6.54562 37.3724 6.81562C37.5624 6.97562 37.7224 7.14563 37.8524 7.34562L37.9624 7.54562V12.8756C37.944 12.939 37.9171 12.9995 37.8824 13.0556C37.7724 13.2356 37.6224 13.3956 37.4724 13.5356C37.1724 13.8056 36.8324 14.0356 36.4824 14.2356C35.9024 14.5356 35.3024 14.7956 34.6824 14.9956C33.7624 15.2956 32.8124 15.5356 31.8624 15.7156C30.5224 15.9656 29.1824 16.1356 27.8324 16.2556C26.0324 16.3956 24.2324 16.4756 22.4124 16.4856H21.7524C20.0224 16.4956 18.2924 16.4256 16.5524 16.2856C15.2524 16.1856 13.9724 16.0156 12.7024 15.7756C11.7824 15.6056 10.8824 15.3656 10.0024 15.0656C9.40238 14.8656 8.82238 14.6056 8.27238 14.2856C7.92905 14.0948 7.61006 13.8631 7.32238 13.5956C7.17238 13.4456 7.02238 13.2756 6.92238 13.0956C6.87962 13.0341 6.84594 12.9667 6.82238 12.8956H6.83238Z\" fill=\"#4F4F4F\"/>\n            <path d=\"M36.5623 14.916H39.0023C39.0023 15.586 39.0223 16.246 39.0523 16.906C39.0705 17.165 39.1072 17.4223 39.1623 17.676C39.5597 18.1274 39.9768 18.5611 40.4123 18.976L41.6223 20.186C42.0523 20.636 42.4623 21.096 42.8523 21.586C43.2423 22.086 43.5723 22.626 43.8523 23.196C44.1523 23.796 44.3023 24.446 44.3223 25.106C44.3523 28.646 44.3423 32.186 44.3223 35.716L44.0923 58.016C44.021 58.694 43.7416 59.3333 43.2923 59.846C42.8623 60.346 42.3423 60.746 41.7623 61.066C41.1023 61.426 40.4123 61.736 39.6923 61.966C38.8523 62.246 37.9923 62.486 37.1223 62.666C36.1223 62.886 35.1023 63.066 34.0723 63.206C32.9223 63.366 31.7623 63.486 30.5923 63.586C27.9308 63.7957 25.2619 63.8958 22.5923 63.886C18.8053 63.8758 15.0256 63.5513 11.2923 62.916C9.58227 62.626 7.89227 62.236 6.22227 61.736C5.49112 61.5155 4.77038 61.2619 4.06227 60.976C3.36389 60.6881 2.68858 60.3471 2.04227 59.956C1.74227 59.616 1.50227 59.576 1.27227 59.196C1.05227 58.826 0.842266 58.136 0.672266 57.746C0.602266 57.586 0.572266 57.426 0.572266 57.246V25.216C0.572266 24.576 0.702266 23.936 0.952266 23.346C1.1869 22.7878 1.48916 22.2606 1.85227 21.776C2.20227 21.306 2.58227 20.856 2.99227 20.446C3.61856 19.7858 4.26555 19.1454 4.93227 18.526C5.14227 18.326 5.33227 18.096 5.53227 17.866C5.65227 17.726 5.76227 17.566 5.85227 17.386C5.86227 17.356 5.88227 17.326 5.88227 17.286L5.82227 15.266L8.26227 15.186L8.32227 17.266V17.336C8.32227 17.746 8.20227 18.146 8.02227 18.516C7.85609 18.8372 7.65487 19.1391 7.42227 19.416C7.18227 19.716 6.92227 19.986 6.66227 20.246L5.84227 21.046L4.74227 22.146C4.41227 22.486 4.10227 22.846 3.81227 23.236C3.56227 23.556 3.36227 23.916 3.21227 24.286C3.08227 24.586 3.01227 24.906 3.01227 25.236V56.986C3.11227 57.196 3.16227 57.516 3.28227 57.716C3.38227 57.876 3.55227 57.926 3.66227 58.076C4.09227 58.316 4.53227 58.526 4.99227 58.716C5.62227 58.976 6.27227 59.196 6.93227 59.396C8.49227 59.866 10.0923 60.236 11.7023 60.516C15.3021 61.139 18.9489 61.4501 22.6023 61.446C25.2023 61.446 27.8023 61.356 30.4023 61.146C31.5223 61.056 32.6323 60.946 33.7423 60.786C34.7123 60.656 35.6623 60.486 36.6123 60.286C37.3923 60.116 38.1723 59.906 38.9223 59.656C39.4969 59.4644 40.0526 59.22 40.5823 58.926C40.9123 58.756 41.2123 58.526 41.4623 58.226C41.5623 58.126 41.6223 57.986 41.6523 57.846L41.8723 35.696C41.9023 32.196 41.9023 28.676 41.8723 25.156C41.8723 24.856 41.7923 24.536 41.6523 24.256C41.4523 23.846 41.2123 23.456 40.9223 23.096C40.6023 22.676 40.2423 22.276 39.8723 21.896C39.5023 21.496 39.1223 21.126 38.7323 20.756C38.3323 20.386 37.9523 20.006 37.5923 19.606C37.4285 19.4308 37.2781 19.2436 37.1423 19.046C37.0143 18.8627 36.9164 18.6602 36.8523 18.446L36.7923 18.286C36.6863 17.8668 36.6226 17.438 36.6023 17.006C36.5723 16.306 36.5623 15.616 36.5623 14.916Z\" fill=\"#4F4F4F\"/>\n            <path d=\"M32.9218 41.9959C33.1918 47.9959 29.0918 50.6459 24.3818 50.6459C19.6818 50.6459 15.8418 48.2159 15.8418 42.2959C15.8418 38.0359 19.6818 35.3359 24.3818 35.3359C29.0818 35.3359 32.7518 37.7759 32.9218 41.9959Z\" fill=\"#E5D993\"/>\n            <path d=\"M31.4022 36.2461C28.3022 36.2461 24.6422 38.1661 24.2022 39.6861C23.7722 41.2061 24.5122 42.3861 21.8122 42.1661C19.1122 41.9461 15.6722 43.5161 15.2722 44.8661C14.8822 46.2161 13.7922 48.3461 14.7522 48.9961C15.7122 49.6461 20.7222 50.7361 22.6822 49.7361C24.6422 48.7361 26.1322 45.6061 26.8722 45.1261C27.6122 44.6461 31.0522 44.3461 32.2722 43.2961C33.4922 42.2561 33.8822 38.1261 33.6222 37.4661C33.3622 36.8161 32.8422 36.2461 31.4022 36.2461Z\" fill=\"#C6AD73\"/>\n            <path d=\"M31.4024 38.7661C30.9224 39.4261 28.4824 40.5961 27.6524 40.8161C26.8224 41.0361 25.7324 40.8561 25.4724 41.2961C25.2124 41.7261 24.7724 43.2061 24.2124 44.0361C23.3541 45.0809 22.1892 45.8295 20.8824 46.1761C19.4024 46.3561 18.4824 46.6161 16.9924 46.5561C16.2524 46.4961 15.6924 46.4861 15.2724 46.1061C15.1024 46.8461 15.1724 47.2061 15.6524 47.5561C16.1324 47.8961 20.5324 48.8561 22.4924 47.8561C24.4624 46.8561 26.1324 43.1561 26.8724 42.6861C27.6124 42.2061 31.0524 41.9061 32.2724 40.8561C33.4924 39.8161 33.2524 38.6161 33.1224 37.5361C32.8224 38.8761 31.7924 38.2961 31.4024 38.7661Z\" fill=\"#B99E5F\"/>\n        </g>\n        <defs>\n            <clipPath id=\"clip0_2484_2136\">\n                <rect width=\"44\" height=\"64\" fill=\"white\" transform=\"translate(0.501953 0.71582)\"/>\n            </clipPath>\n        </defs>\n    </svg>\n</template>\n","<template>\n    <svg width=\"60\" height=\"58\" viewBox=\"0 0 60 58\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g clip-path=\"url(#clip0_2484_1838)\">\n            <path d=\"M11.9721 2.49091C0.972063 6.30091 -1.97794 31.5609 8.86206 42.6109C19.6921 53.6509 37.8621 43.9809 38.9821 32.2109C40.2621 18.8409 21.8321 -0.989094 11.9721 2.49091Z\" fill=\"#EAE4D6\"/>\n            <path d=\"M5.53207 8.49145C5.53207 8.49145 5.83207 25.0514 10.5621 31.0914C10.5621 31.0914 22.4621 40.8914 28.3921 40.0914L37.0521 37.8914L32.8321 42.7814L26.7321 46.2514L20.8921 47.4514L14.9621 46.5514L10.5221 44.1114L5.78207 38.5014L2.88207 30.7514L2.12207 21.7514L3.44207 13.4114L5.53207 8.48145V8.49145Z\" fill=\"#D3CEC5\"/>\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M40.5024 32.3512C40.3924 33.4912 40.1424 34.6212 39.7624 35.7012C39.3902 36.7861 38.9041 37.8286 38.3124 38.8112C37.0785 40.8113 35.5167 42.5895 33.6924 44.0712C31.8214 45.5912 29.7178 46.8 27.4624 47.6512C25.1824 48.5312 22.7624 48.9812 20.3124 49.0012C16.8722 48.9989 13.5089 47.9833 10.6424 46.0812C9.60241 45.3812 8.64241 44.5812 7.76241 43.6812C6.49511 42.377 5.39652 40.9189 4.49241 39.3412C3.57917 37.7416 2.83195 36.0528 2.26241 34.3012C1.67481 32.5214 1.2399 30.6948 0.962408 28.8412C0.325035 24.5734 0.41633 20.2284 1.23241 15.9912C1.65234 13.7501 2.34062 11.5677 3.28241 9.49115C3.72241 8.51115 4.23241 7.57115 4.80241 6.67115C5.35319 5.81718 5.979 5.014 6.67241 4.27115C7.34241 3.55115 8.08241 2.90115 8.89241 2.35115C9.69241 1.80115 10.5624 1.36115 11.4724 1.04115C12.4224 0.711154 13.4324 0.541154 14.4424 0.561154C15.1724 0.561154 15.9024 0.631154 16.6124 0.771154C17.3624 0.921154 18.1024 1.12115 18.8124 1.38115C20.3552 1.95444 21.8333 2.68848 23.2224 3.57115C24.7442 4.53679 26.1855 5.62365 27.5324 6.82115C31.8652 10.6731 35.4047 15.3335 37.9524 20.5412C38.7524 22.2012 39.3824 23.9412 39.8524 25.7112C40.2924 27.3902 40.5307 29.1157 40.5624 30.8512C40.5724 31.3512 40.5524 31.8512 40.4924 32.3512H40.5024ZM37.4524 32.0512C37.3724 32.9512 37.1724 33.8412 36.8824 34.6912C36.5824 35.5712 36.1824 36.4212 35.6924 37.2312C34.6702 38.9456 33.3414 40.4574 31.7724 41.6912C30.1514 43.0089 28.3278 44.0558 26.3724 44.7912C24.4324 45.5312 22.3724 45.9212 20.3024 45.9312C17.4708 45.9312 14.7021 45.0964 12.3424 43.5312C11.4792 42.9484 10.6783 42.2782 9.95241 41.5312C8.86548 40.4146 7.92464 39.1646 7.15241 37.8112C6.33483 36.3934 5.66466 34.8955 5.15241 33.3412C4.62197 31.7241 4.23054 30.0648 3.98241 28.3812C3.23989 23.4119 3.59141 18.3404 5.01241 13.5212C5.31241 12.5812 5.66241 11.6512 6.06241 10.7412C6.44241 9.91115 6.88241 9.10115 7.37241 8.34115C7.83241 7.63115 8.33241 6.97115 8.90241 6.36115C9.41443 5.80456 9.98812 5.30803 10.6124 4.88115C11.1924 4.48115 11.8124 4.18115 12.4724 3.94115C13.1024 3.73115 13.7624 3.62115 14.4224 3.62115C14.9624 3.62115 15.5024 3.68115 16.0224 3.78115C16.6224 3.90115 17.2224 4.06115 17.7924 4.27115C18.4324 4.50115 19.0524 4.77115 19.6624 5.07115C20.3224 5.40115 20.9624 5.77115 21.5924 6.17115C22.9724 7.04115 24.2924 8.03115 25.5124 9.12115C28.1994 11.512 30.5687 14.2376 32.5624 17.2312C33.5498 18.7089 34.4288 20.2563 35.1924 21.8612C35.9059 23.3522 36.4817 24.9053 36.9124 26.5012C37.1124 27.2312 37.2524 27.9812 37.3624 28.7312C37.5112 29.8347 37.5448 30.9507 37.4624 32.0612L37.4524 32.0512Z\" fill=\"#4F4F4F\"/>\n            <path d=\"M46.5722 10.151C35.4722 6.69098 18.0722 25.221 20.2522 40.551C22.4222 55.881 42.7322 58.961 50.6222 50.191C59.5822 40.211 56.5122 13.281 46.5722 10.151Z\" fill=\"#EFECE6\"/>\n            <path d=\"M46.062 11.7905C43.962 11.0505 41.532 11.3505 39.272 12.1705C38.102 12.6005 36.972 13.1505 35.902 13.7905C34.7995 14.442 33.7466 15.174 32.752 15.9805C30.7794 17.6369 28.9771 19.4861 27.372 21.5005C25.8228 23.5757 24.5081 25.8161 23.452 28.1805C22.452 30.5405 21.782 33.0405 21.482 35.5805C21.182 38.0805 21.432 40.6105 22.212 42.9905C22.992 45.3205 24.372 47.3905 26.212 48.9905C28.0678 50.6053 30.2511 51.7992 32.612 52.4905C34.982 53.1605 37.432 53.3805 39.872 53.1405C42.272 52.9805 44.572 52.2405 46.612 50.9605C47.592 50.3605 48.472 49.6105 49.212 48.7305C49.9601 47.8447 50.5919 46.8667 51.092 45.8205C51.642 44.7205 52.092 43.5705 52.462 42.3905C52.812 41.2005 53.082 39.9905 53.262 38.7505C53.672 36.2405 53.842 33.6805 53.782 31.1305C53.7598 28.5888 53.502 26.0547 53.012 23.5605C52.5461 21.0972 51.7559 18.7063 50.662 16.4505C50.1052 15.4094 49.4344 14.4334 48.662 13.5405C47.9549 12.7471 47.0613 12.1422 46.062 11.7805V11.7905ZM47.042 8.57055C48.6056 9.04254 50.0189 9.91464 51.142 11.1005C52.2046 12.1744 53.1193 13.385 53.862 14.7005C55.2534 17.1979 56.2901 19.877 56.942 22.6605C58.2364 28.1768 58.4064 33.8972 57.442 39.4805C57.212 40.8805 56.882 42.2805 56.472 43.6405C56.0146 45.0326 55.4564 46.3895 54.802 47.7005C54.0931 49.0371 53.2342 50.2885 52.242 51.4305C51.1903 52.5601 49.9852 53.5363 48.662 54.3305C47.3624 55.081 45.9707 55.6592 44.522 56.0505C43.102 56.4405 41.642 56.6805 40.172 56.7805C37.272 56.9305 34.362 56.5405 31.592 55.6205C28.8226 54.7231 26.2878 53.2201 24.172 51.2205C23.1117 50.2054 22.1934 49.0516 21.442 47.7905C20.6615 46.5491 20.0463 45.2112 19.612 43.8105C18.822 41.0405 18.612 38.1405 18.972 35.2905C19.342 32.5005 20.112 29.7905 21.272 27.2405C21.532 26.6005 21.872 25.9505 22.172 25.3505L23.152 23.5105L23.702 22.6105L24.262 21.7605C24.602 21.1605 25.022 20.6005 25.412 20.0405C27.0594 17.7889 28.9472 15.7234 31.042 13.8805C33.1582 11.9844 35.5613 10.4352 38.162 9.29055C39.532 8.74055 40.962 8.36055 42.432 8.17055C43.982 7.98055 45.552 8.11055 47.032 8.56055L47.042 8.57055Z\" fill=\"#4F4F4F\"/>\n            <path d=\"M37.0619 46.7609C38.2963 46.7583 39.5181 46.5125 40.6576 46.0377C41.7971 45.5629 42.8318 44.8683 43.7028 43.9936C44.5739 43.1188 45.2641 42.0811 45.734 40.9396C46.204 39.7982 46.4445 38.5753 46.4419 37.3409C46.4445 36.1065 46.204 34.8836 45.734 33.7421C45.2641 32.6007 44.5739 31.563 43.7028 30.6882C42.8318 29.8135 41.7971 29.1189 40.6576 28.6441C39.5181 28.1693 38.2963 27.9235 37.0619 27.9209C35.8266 27.9222 34.6037 28.167 33.4631 28.6412C32.3225 29.1154 31.2866 29.8098 30.4145 30.6847C29.5424 31.5596 28.8513 32.5977 28.3807 33.7398C27.9101 34.882 27.6693 36.1056 27.6719 37.3409C27.6693 38.5762 27.9101 39.7998 28.3807 40.942C28.8513 42.0841 29.5424 43.1222 30.4145 43.9971C31.2866 44.872 32.3225 45.5664 33.4631 46.0406C34.6037 46.5148 35.8266 46.7596 37.0619 46.7609Z\" fill=\"#F2D38C\"/>\n            <path d=\"M46.4419 37.3411C46.4419 37.0411 46.4419 36.7411 46.4019 36.4411C45.808 37.7841 44.9511 38.9945 43.8819 40.0011C41.5819 42.1411 38.2919 41.8411 35.8619 40.7711C33.4319 39.7011 31.0819 37.3411 31.1619 33.9211C31.2338 32.2355 31.7032 30.5907 32.5319 29.1211C30.6093 30.2106 29.1298 31.9402 28.3513 34.0084C27.5728 36.0767 27.5445 38.3525 28.2715 40.4394C28.9985 42.5263 30.4346 44.292 32.3296 45.429C34.2246 46.5659 36.4584 47.0019 38.6419 46.6611C40.834 46.2805 42.8204 45.1354 44.2483 43.4292C45.6762 41.723 46.4534 39.566 46.4419 37.3411Z\" fill=\"#EABC60\"/>\n        </g>\n        <defs>\n            <clipPath id=\"clip0_2484_1838\">\n                <rect width=\"59\" height=\"57\" fill=\"white\" transform=\"translate(0.00195312 0.291016)\"/>\n            </clipPath>\n        </defs>\n    </svg>\n</template>\n","<template>\n    <svg width=\"99\" height=\"61\" viewBox=\"0 0 99 61\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g clip-path=\"url(#clip0_2484_1980)\">\n            <path d=\"M37.4203 13.5555L38.206 15.2227L38.9103 17.7371L39.9398 20.559C40.3944 21.7076 41.3245 24.7435 41.3485 25.5876C41.3725 26.4317 42.2486 27.5684 42.2756 28.518L42.2996 29.3621L41.4864 30.4412C41.384 30.5497 40.1553 31.8518 40.1643 32.1684C40.1703 32.3794 39.3722 33.9861 38.8542 34.3176C37.7249 34.947 36.683 35.7222 35.7554 36.6232C35.3548 37.3738 33.31 39.6495 33.0028 39.975L32.1806 40.7376L30.6477 42.4707C30.3595 42.8791 30.0147 43.2445 29.6238 43.5558L28.4735 43.9053L25.6733 41.8729L25.3306 37.2363L23.6027 32.1111L24.1151 27.8726L24.4527 24.9063L25.7239 21.3854L29.6358 18.0007L33.7675 14.9265L37.3149 13.5585L37.4203 13.5555Z\" fill=\"#9B5032\"/>\n            <path d=\"M24.657 28.3859C24.657 28.3859 26.1865 30.2432 26.0961 30.7738C26.9598 33.8512 27.9612 36.8881 29.0972 39.8755C29.32 40.2916 29.4973 42.8209 29.4973 42.8209L29.9609 44.2861L26.0794 45.03C26.0794 45.03 23.9685 44.9844 22.8936 44.2758L16.9916 44.4435C16.9916 44.4435 13.2155 45.1845 12.3544 44.5753L8.54828 44.2611C8.54828 44.2611 6.66664 41.1467 6.60666 39.0364C6.50127 39.0394 4.80043 34.8638 4.98122 33.8027L3.73194 30.6703L3.136 28.2584C3.43466 27.9717 3.78662 27.7464 4.17193 27.5954C4.5875 27.3724 9.41755 26.6015 9.94751 26.6921L17.7615 26.998C19.8694 26.938 23.0221 26.5316 23.4527 26.8362C23.9947 27.3488 24.3258 27.8674 24.66 28.4915L24.657 28.3859Z\" fill=\"#9B5032\"/>\n            <path opacity=\"0.2\" d=\"M24.657 28.3859C24.657 28.3859 26.1865 30.2432 26.0961 30.7738C26.9598 33.8512 27.9612 36.8881 29.0972 39.8755C29.32 40.2916 29.4973 42.8209 29.4973 42.8209L29.9609 44.2861L26.0794 45.03C26.0794 45.03 23.9685 44.9844 22.8936 44.2758L16.9916 44.4435C16.9916 44.4435 13.2155 45.1845 12.3544 44.5753L8.54828 44.2611C8.54828 44.2611 6.66664 41.1467 6.60666 39.0364C6.50127 39.0394 4.80043 34.8638 4.98122 33.8027L3.73194 30.6703L3.136 28.2584C3.43466 27.9717 3.78662 27.7464 4.17193 27.5954C4.5875 27.3724 9.41755 26.6015 9.94751 26.6921L17.7615 26.998C19.8694 26.938 23.0221 26.5316 23.4527 26.8362C23.9947 27.3488 24.3258 27.8674 24.66 28.4915L24.657 28.3859Z\" fill=\"black\"/>\n            <path d=\"M3.33182 27.7241C3.633 27.1875 14.8513 13.6689 16.6429 13.618L24.2162 12.8747C26.315 12.4983 28.5917 10.9552 31.7744 11.6039L37.092 13.1424C37.7334 13.4409 36.8238 14.8395 35.2999 16.8892C33.7263 18.8583 31.9373 20.6447 29.9665 22.2151C29.1413 22.8722 26.8707 24.6263 26.5815 25.5849C26.2953 26.649 25.181 28.2646 24.657 28.3851L15.1837 29.0768C14.2352 29.1037 11.0314 27.7164 9.55596 27.7584C8.07747 27.6948 5.35826 28.5113 5.03909 28.4147C4.82231 28.2097 2.62406 28.8002 3.33182 27.7241Z\" fill=\"#9B5032\"/>\n            <path opacity=\"0.1\" d=\"M3.33182 27.7241C3.633 27.1875 14.8513 13.6689 16.6429 13.618L24.2162 12.8747C26.315 12.4983 28.5917 10.9552 31.7744 11.6039L37.092 13.1424C37.7334 13.4409 36.8238 14.8395 35.2999 16.8892C33.7263 18.8583 31.9373 20.6447 29.9665 22.2151C29.1413 22.8722 26.8707 24.6263 26.5815 25.5849C26.2953 26.649 25.181 28.2646 24.657 28.3851L15.1837 29.0768C14.2352 29.1037 11.0314 27.7164 9.55596 27.7584C8.07747 27.6948 5.35826 28.5113 5.03909 28.4147C4.82231 28.2097 2.62406 28.8002 3.33182 27.7241Z\" fill=\"white\"/>\n            <path opacity=\"0.1\" d=\"M35.2218 14.146L34.2218 16.0752C34.2218 16.0752 33.2189 17.8989 33.3273 18.0014L34.3358 20.0847C34.3358 20.0847 35.1999 20.7993 35.8203 20.3593L37.6574 18.1951C37.6574 18.1951 38.8771 16.5765 38.8711 16.3654L37.7572 14.2851L35.2218 14.146Z\" fill=\"black\"/>\n            <path opacity=\"0.1\" d=\"M30.9495 12.2616L28.7208 15.4929L28.582 18.0312L26.9437 19.7673L24.5587 21.2079L23.7515 22.498L20.7251 23.64L17.8671 26.9948L15.6085 29.171L15.6984 32.3363L17.4147 33.3435L18.3328 35.9574L18.0946 38.7097L20.0696 41.3991L22.4722 44.2876L25.8868 45.6689L29.6659 45.0335L32.3461 42.8454L33.9334 39.3155L34.8164 33.2713L33.4797 30.775L33.3928 27.7151L34.5675 24.5138L34.2967 22.4095L39.0942 16.782L37.6192 13.128L31.0548 12.2586L30.9495 12.2616Z\" fill=\"black\"/>\n            <path opacity=\"0.1\" d=\"M22.8389 23.7913L20.8845 25.5364L22.0588 26.031L22.8419 23.8968L22.8389 23.7913ZM21.3947 13.8005L19.22 18.931L13.6098 21.9416L9.7523 23.5296L6.12655 25.8503L5.06063 25.4582L15.8059 13.8537L20.5276 12.9804L21.3947 13.8005Z\" fill=\"black\"/>\n            <path opacity=\"0.1\" d=\"M24.6126 19.4113L24.5342 20.3639L24.0193 20.8009L22.9833 21.464L22.6462 20.7344L23.4623 19.7608L23.9743 19.2182L24.6126 19.4113ZM26.7723 13.7532L25.9832 15.6764L27.1305 15.2214L26.8443 16.2855L26.7689 17.3436L27.6874 16.2616L28.2898 15.1884C28.2898 15.1884 28.2688 14.4499 28.055 14.3503L28.1394 13.6087L26.7693 13.6477L26.7723 13.7532Z\" fill=\"white\"/>\n            <path opacity=\"0.1\" d=\"M5.59509 33.1508L9.22641 34.7372L10.6415 36.281L12.7883 37.5927L13.2549 39.1634L12.6735 40.9751L13.673 42.7419L14.1546 44.8402L8.86696 44.3568L7.1327 42.7166L5.44386 38.963L5.1401 35.6981L4.75795 33.3858L5.4897 33.1538L5.59509 33.1508Z\" fill=\"black\"/>\n            <path opacity=\"0.1\" d=\"M16.3045 23.9765L15.6057 25.3692L14.5818 26.4542L12.504 27.5693L13.5009 25.5346L14.7446 24.76L16.3799 22.9184L16.4099 23.9735L16.3045 23.9765Z\" fill=\"white\"/>\n            <path opacity=\"0.1\" d=\"M18.2686 15.1557L16.9615 17.4105L16.2688 19.0141L16.1274 17.751C16.011 17.4837 15.932 17.2017 15.8926 16.9128L16.8985 15.1947L17.7117 14.1156L18.4584 14.4112L18.2686 15.1557ZM14.1339 18.1244L14.0555 19.077L13.5496 19.8306L12.2064 20.8191L12.1765 19.764L12.3483 18.3864L14.3027 16.6412L14.1339 18.1244Z\" fill=\"black\"/>\n            <path opacity=\"0.1\" d=\"M6.89383 30.5804L7.54118 31.09L7.77295 31.8226L6.60764 31.6445L5.72852 30.4023L6.78544 30.4779L6.89383 30.5804Z\" fill=\"white\"/>\n            <path opacity=\"0.1\" d=\"M11.9439 30.1197L13.6691 31.4434L14.5572 33.0021L13.2805 32.616L11.5853 32.3474L11.0947 29.9326L11.8385 30.1227L11.9439 30.1197Z\" fill=\"black\"/>\n            <path d=\"M96.3908 21.2778L95.704 23.0925C95.3125 24.1596 94.6921 24.5996 94.4029 25.5582L93.1108 28.3405C92.6168 29.5161 91.1169 32.4099 90.3971 33.0639C89.7828 33.715 89.7194 35.1952 88.9996 35.8492L88.3883 36.6058L87.0212 36.7502C86.8104 36.7562 84.9133 36.8102 84.8139 37.0242C84.6062 37.1357 82.8295 37.7142 82.2965 37.5181C81.0228 37.2375 79.6467 37.0654 78.2766 37.1044L73.8591 37.5467C73.4318 37.5207 73.007 37.4622 72.5884 37.3717L70.2758 37.6486C69.7488 37.6636 69.2219 37.6785 68.6889 37.4825L67.62 36.9849L67.0965 33.4094L70.1593 29.8376L72.6531 24.8036L76.2639 21.9555L78.5285 19.9903L82.0699 18.4113L87.4629 18.8916L92.7625 19.7969L96.3908 21.2778Z\" fill=\"#9B5032\"/>\n            <path d=\"M76.264 21.9556C76.264 21.9556 75.806 24.3973 75.288 24.7289C75.288 24.7289 73.2881 28.5872 72.478 29.7718C71.7278 30.9048 71.0566 32.0882 70.4691 33.3137C70.2733 33.8472 68.4242 35.5894 68.4242 35.5894L67.6201 36.985L64.3863 34.5425C64.3863 34.5425 62.9683 32.8933 62.7185 31.5276C62.7185 31.5276 59.4518 27.9245 58.4792 27.1074C58.4792 27.1074 55.2425 24.5594 55.2125 23.5043L52.8039 20.4048C52.8039 20.4048 53.9637 16.6759 55.4002 15.2623C55.4002 15.2623 57.5928 10.7649 58.424 10.3188C58.424 10.3188 59.7191 7.64207 60.1257 7.10252L61.5412 4.95033C61.9628 4.93834 62.2849 5.14038 62.6041 5.23691C64.3264 6.45514 65.8409 7.78487 67.3583 9.22011L72.5971 15.4071C73.9098 17.0594 76.6106 19.3058 76.6256 19.8333C76.6466 20.5719 76.4568 21.3165 76.264 21.9556Z\" fill=\"#9B5032\"/>\n            <path opacity=\"0.2\" d=\"M76.264 21.9556C76.264 21.9556 75.806 24.3973 75.288 24.7289C75.288 24.7289 73.2881 28.5872 72.478 29.7718C71.7278 30.9048 71.0566 32.0882 70.4691 33.3137C70.2733 33.8472 68.4242 35.5894 68.4242 35.5894L67.6201 36.985L64.3863 34.5425C64.3863 34.5425 62.9683 32.8933 62.7185 31.5276C62.7185 31.5276 59.4518 27.9245 58.4792 27.1074C58.4792 27.1074 55.2425 24.5594 55.2125 23.5043L52.8039 20.4048C52.8039 20.4048 53.9637 16.6759 55.4002 15.2623C55.4002 15.2623 57.5928 10.7649 58.424 10.3188C58.424 10.3188 59.7191 7.64207 60.1257 7.10252L61.5412 4.95033C61.9628 4.93834 62.2849 5.14038 62.6041 5.23691C64.3264 6.45514 65.8409 7.78487 67.3583 9.22011L72.5971 15.4071C73.9098 17.0594 76.6106 19.3058 76.6256 19.8333C76.6466 20.5719 76.4568 21.3165 76.264 21.9556Z\" fill=\"black\"/>\n            <path d=\"M61.8506 4.73001C62.5883 4.70904 80.8212 4.19081 82.0135 5.3185C83.3142 6.54871 86.2437 9.4222 87.8636 10.7489C89.5949 12.2837 92.353 12.8389 94.0209 15.8538C95.5804 18.7663 96.2577 20.331 96.4895 21.0636C96.7183 21.6907 95.1434 21.9466 92.3038 22.2385C89.7744 22.3104 87.242 22.2768 84.6975 21.8211C83.5292 21.5375 80.6657 20.9853 79.7321 21.5399C78.6902 21.9919 76.5883 22.2628 76.2632 21.9553L69.1064 15.0836C68.3506 14.4715 67.3001 10.911 66.3156 9.67181C65.2317 8.64664 62.7597 7.02733 62.6423 6.60827C62.6363 6.39725 60.4895 5.08549 61.8536 4.83552L61.8506 4.73001Z\" fill=\"#9B5032\"/>\n            <path opacity=\"0.1\" d=\"M61.8506 4.73001C62.5883 4.70904 80.8212 4.19081 82.0135 5.3185C83.3142 6.54871 86.2437 9.4222 87.8636 10.7489C89.5949 12.2837 92.353 12.8389 94.0209 15.8538C95.5804 18.7663 96.2577 20.331 96.4895 21.0636C96.7183 21.6907 95.1434 21.9466 92.3038 22.2385C89.7744 22.3104 87.242 22.2768 84.6975 21.8211C83.5292 21.5375 80.6657 20.9853 79.7321 21.5399C78.6902 21.9919 76.5883 22.2628 76.2632 21.9553L69.1064 15.0836C68.3506 14.4715 67.3001 10.911 66.3156 9.67181C65.2317 8.64664 62.7597 7.02733 62.6423 6.60827C62.6363 6.39725 60.4895 5.08549 61.8536 4.83552L61.8506 4.73001ZM91.9778 29.3229C91.9778 29.3229 89.313 28.3426 88.792 28.5686L87.0513 30.4133L87.1203 32.8401C87.1203 32.8401 89.1497 33.7328 89.9809 33.2868L91.9173 30.9086L91.8724 29.3259L91.9778 29.3229Z\" fill=\"white\"/>\n            <path opacity=\"0.1\" d=\"M94.5389 19.2186L92.449 19.9115C92.449 19.9115 90.2508 20.502 90.2568 20.713L89.579 22.8443C89.579 22.8443 89.615 24.1104 90.4611 24.192L93.4091 24.0026C94.1469 23.9816 94.8786 23.7496 95.505 23.5206L96.3905 21.2779L94.4335 19.2215L94.5389 19.2186ZM79.4969 28.0939C79.4969 28.0939 77.2687 27.6293 77.0639 27.8463C76.6543 28.2803 76.2448 28.7144 76.049 29.2479C75.8442 29.4649 75.7478 29.7845 75.7568 30.101C75.7658 30.4175 77.1569 31.1172 77.2623 31.1142C77.4761 31.2137 78.53 31.1838 78.9425 30.8552L80.2827 29.7612L79.4969 28.0939Z\" fill=\"black\"/>\n            <path opacity=\"0.1\" d=\"M92.9585 15.5679L88.9656 16.1038L86.9028 17.7464L84.4757 17.7098L81.6002 16.7355L80.1337 17.094L77.2401 15.4867L72.6028 15.6185L69.3267 15.3948L66.7518 17.58L67.4442 19.6722L65.9353 22.2495L63.6646 24.0036L63.0228 27.401L62.3901 31.1149L63.7597 34.7719L66.7857 37.3258L70.387 37.8571L74.1511 36.6941L79.3248 33.1679L80.3037 30.5001L82.6678 28.321L85.902 27.0675L87.4349 25.3343L95.1315 25.2212L96.9266 21.5798L92.9585 15.5679Z\" fill=\"black\"/>\n            <path opacity=\"0.1\" d=\"M78.4531 17.3527L75.9086 16.897L76.2638 18.2597L78.3477 17.3557L78.4531 17.3527ZM85.187 9.34701L79.6462 11.0885L73.4645 8.83541L69.6164 7.04402L65.3617 5.79217L64.9102 4.74902L81.3693 4.9148L85.2534 7.97235L85.2924 9.34402L85.187 9.34701Z\" fill=\"black\"/>\n            <path opacity=\"0.1\" d=\"M81.4372 14.7336L80.8228 15.3847L80.0851 15.4056L78.9138 15.0165L79.1035 14.272L80.3652 14.1305L81.2084 14.1065L81.4372 14.7336ZM89.1882 12.8237L87.2097 13.7248L88.3841 14.2194L87.3481 14.8824L86.6284 15.5365L87.9985 15.4975L89.3566 15.0365L89.7572 14.2859L90.2721 13.8489L89.1882 12.8237ZM74.2135 12.9326L72.5392 13.4025L71.1691 13.4415L68.7181 12.5608L71.0218 11.9673L72.5092 12.3474L74.9333 12.2785L74.2135 12.9326Z\" fill=\"white\"/>\n            <path opacity=\"0.1\" d=\"M81.977 7.74872L79.3572 8.35117L77.683 8.82115L78.5021 7.95308L79.0051 7.094L80.8931 6.72355L82.3686 6.68161L82.7028 7.3057L81.977 7.74872Z\" fill=\"black\"/>\n            <path opacity=\"0.1\" d=\"M62.9628 21.5947L60.7706 22.3962L60.4874 23.5658L61.5413 23.5359L62.5772 22.8729L62.9628 21.5947ZM64.1958 9.31029L63.8222 11.0105L62.7109 12.7316L62.9731 10.8234L62.9191 8.92418L64.3012 9.30729L64.1958 9.31029ZM62.1964 9.47271L62.2263 10.5278L61.9282 11.1699L61.1604 10.1357L61.4316 8.54407L62.1964 9.47271Z\" fill=\"white\"/>\n            <path d=\"M70.4094 23.8121C70.7466 24.5417 70.876 25.3828 71.0023 26.1184C71.2491 27.3786 71.0623 28.2286 71.0923 29.2838L71.5105 32.8622C71.6608 34.4419 71.9766 38.1289 71.6904 39.193C71.3982 40.0461 72.1839 41.7133 72.0031 42.7745L71.8223 43.8356L70.5876 44.9267C70.3798 45.0382 68.5128 46.1472 68.5218 46.4637C68.4254 46.7833 66.9949 48.4079 66.2631 48.6399C65.5284 48.7664 62.8182 49.8994 62.0984 50.5534L57.9667 53.6276L56.6146 54.2996L54.4433 55.8397C53.6152 56.3913 52.8894 56.8343 52.7811 56.7318L51.414 56.8762L48.6862 53.6802L49.5842 48.1636L49.085 41.7363L50.9465 36.7203L52.1213 33.5189L54.6481 29.6456L60.2643 26.846L66.0009 24.571L70.5148 23.8091L70.4094 23.8121Z\" fill=\"#9B5032\"/>\n            <path d=\"M50.9468 36.7199C50.9468 36.7199 51.9733 39.4363 51.6721 39.9728C51.6721 39.9728 52.0328 45.2425 51.864 46.7257L52.002 51.5793C52.02 52.2123 51.3632 55.0822 51.3632 55.0822L51.4112 56.7704L46.7559 56.2691C46.7559 56.2691 44.3079 55.4939 43.3234 54.2547C43.3234 54.2547 37.9004 52.7192 36.4159 52.4446C36.4159 52.4446 31.7607 51.9434 30.8875 50.9122L26.6209 49.2383C26.6209 49.2383 25.6518 44.8307 26.2212 42.597C26.2212 42.597 25.6346 36.8058 26.3424 35.7297L25.9063 31.5181L26.1415 28.6603L27.4996 28.1993C28.0265 28.1843 33.9585 29.0717 34.4914 29.2677C35.0274 29.5693 41.0977 31.6143 43.4404 32.3925C45.786 33.2763 49.8059 33.69 50.14 34.3141L50.9438 36.6144L50.9468 36.7199Z\" fill=\"#9B5032\"/>\n            <path opacity=\"0.2\" d=\"M50.9468 36.7199C50.9468 36.7199 51.9733 39.4363 51.6721 39.9728C51.6721 39.9728 52.0328 45.2425 51.864 46.7257L52.002 51.5793C52.02 52.2123 51.3632 55.0822 51.3632 55.0822L51.4112 56.7704L46.7559 56.2691C46.7559 56.2691 44.3079 55.4939 43.3234 54.2547C43.3234 54.2547 37.9004 52.7192 36.4159 52.4446C36.4159 52.4446 31.7607 51.9434 30.8875 50.9122L26.6209 49.2383C26.6209 49.2383 25.6518 44.8307 26.2212 42.597C26.2212 42.597 25.6346 36.8058 26.3424 35.7297L25.9063 31.5181L26.1415 28.6603L27.4996 28.1993C28.0265 28.1843 33.9585 29.0717 34.4914 29.2677C35.0274 29.5693 41.0977 31.6143 43.4404 32.3925C45.786 33.2763 49.8059 33.69 50.14 34.3141L50.9438 36.6144L50.9468 36.7199Z\" fill=\"black\"/>\n            <path d=\"M26.449 28.335C26.964 27.898 44.7765 16.3039 46.794 16.7745L55.8123 18.6302C58.2483 18.9833 61.4885 17.9408 64.921 19.9552C68.3536 21.9696 69.859 22.9828 70.5064 23.4924C71.1567 24.1075 69.7142 25.3101 67.2358 27.1757C64.7544 28.9358 62.0532 30.3854 59.2346 31.4159C57.9848 31.9794 54.7477 33.1274 54.0399 34.2035C53.5399 35.1681 51.5825 36.8077 50.9471 36.7201C50.3148 36.7381 40.7575 34.4754 39.6946 34.1888C38.6317 33.9022 35.3889 31.1432 33.6847 30.5581C31.9804 29.9729 28.5024 30.0718 28.3851 29.6527C28.0629 29.4507 25.2143 29.4261 26.449 28.335Z\" fill=\"#9B5032\"/>\n            <path opacity=\"0.1\" d=\"M26.449 28.335C26.964 27.898 44.7765 16.3039 46.794 16.7745L55.8123 18.6302C58.2483 18.9833 61.4885 17.9408 64.921 19.9552C68.3535 21.9696 69.859 22.9828 70.5064 23.4924C71.1567 24.1075 69.7142 25.3101 67.2358 27.1757C64.7544 28.9358 62.0532 30.3854 59.2346 31.4159C57.9848 31.9794 54.7477 33.1274 54.0399 34.2035C53.5399 35.1681 51.5825 36.8077 50.9471 36.7201C50.3148 36.7381 40.7575 34.4754 39.6946 34.1888C38.6317 33.9022 35.3889 31.1432 33.6847 30.5581C31.9804 29.9729 28.5024 30.0718 28.3851 29.6527C28.0629 29.4507 25.2143 29.4261 26.449 28.335ZM70.9267 34.5683C70.9267 34.5683 67.7799 35.1857 67.4787 35.7223L66.7165 38.5951L68.3634 40.8714C68.3634 40.8714 70.8898 40.694 71.4952 39.7264L71.8148 36.127L70.8213 34.5713L70.9267 34.5683Z\" fill=\"white\"/>\n            <path opacity=\"0.1\" d=\"M67.4349 23.0515L65.6942 24.8961C65.6942 24.8961 63.9565 26.8463 64.1733 27.0513L64.7723 29.5686C64.7723 29.5686 65.546 30.8138 66.3771 30.3678L69.2741 28.3847L71.1232 26.6426L70.5153 23.8087L67.3295 23.0545L67.4349 23.0515ZM57.8151 40.8542C57.8151 40.8542 55.4181 41.8727 55.3187 42.0867C55.1259 42.7258 55.0415 43.4674 55.0595 44.1005C55.0685 44.417 55.0805 44.839 55.4056 45.1466C55.6254 45.4571 57.3117 45.4092 57.5195 45.2977C57.7273 45.1862 58.7632 44.5232 58.959 43.9896L59.6427 42.0694L57.8151 40.8542Z\" fill=\"black\"/>\n            <path opacity=\"0.1\" d=\"M63.7706 20.3043L60.1628 23.258L59.0845 26.1398L56.4857 27.4809L53.2425 28.4179L51.9024 29.5119L48.0029 29.6228L43.555 32.7059L40.122 34.3875L38.9623 38.1164L40.8019 39.7537L40.9039 43.3411L39.7261 46.4369L41.0988 50.1994L42.7997 54.375L46.0364 56.923L50.6976 57.6353L54.5552 56.0473L57.621 52.581L60.5968 45.9493L60.0823 42.6904L61.0342 39.073L63.4737 35.8357L64.031 33.1799L71.6047 28.7407L71.256 23.8931L63.7736 20.4099L63.7706 20.3043ZM52.3342 18.7286L47.8379 23.8195L40.2857 25.3014L35.4496 25.8612L30.3214 27.2742L29.3489 26.457L45.9477 16.6926L51.5605 17.4834L52.2288 18.7316L52.3342 18.7286Z\" fill=\"black\"/>\n            <path opacity=\"0.1\" d=\"M51.8121 26.3462L51.5259 27.4104L50.8002 27.8534L49.5475 28.3114L49.2013 27.2652L50.3366 26.3882L51.1678 25.9422L51.8121 26.3462ZM58.3773 19.8237L56.8564 21.9789L58.4283 21.6175L57.8319 22.9016L57.3349 23.9717L58.681 23.0887L59.702 21.8981L59.672 20.8429L60.0726 20.0924L58.3773 19.8237ZM29.5285 32.7875L30.1909 33.8247L30.2149 34.6688L28.9322 34.0716L28.2488 32.2959L29.5285 32.7875Z\" fill=\"white\"/>\n            <path opacity=\"0.1\" d=\"M27.5918 38.8624L29.9434 39.9572L31.0723 42.565L31.1323 44.6753L29.0818 43.044L29.0309 41.2503L26.884 39.9385L27.6972 38.8594L27.5918 38.8624ZM27.1728 42.6759L29.0214 44.6297L29.8192 46.719L28.3197 45.9168L26.4016 45.2321L26.3206 42.3833L27.1728 42.6759Z\" fill=\"black\"/>\n            <path d=\"M59.364 50.8418L61.5258 52.6811L59.5654 54.2152C58.8267 54.6964 58.0649 55.1409 57.2827 55.5472L56.9725 55.7673L56.3522 56.2073L55.3193 56.9758L54.9037 57.1988L54.4881 57.4218C53.4286 57.8046 52.3453 58.1176 51.2449 58.3588L46.5897 57.8575C46.2735 57.8665 46.0567 57.6615 45.8429 57.562C44.765 56.7478 43.6901 56.0392 42.305 55.5505C42.302 55.445 42.299 55.3395 42.0852 55.24L41.3385 54.9444L39.2157 54.4768C37.9564 54.1972 36.6828 53.9866 35.4006 53.846L34.5514 53.659C32.9186 53.0811 31.3157 52.4218 29.7488 51.6835L29.3242 51.59L28.1499 51.0954L26.4516 50.7212C26.1607 50.6612 25.8971 50.5082 25.7006 50.2853C25.504 50.0623 25.3851 49.7815 25.3617 49.485L24.7482 42.7442L24.7362 42.3221C24.9379 41.739 25.0625 41.132 25.1068 40.5164C25.2067 39.0034 25.1635 37.4843 24.9779 35.9794L25.0593 35.1323L25.0503 34.8157C25.0834 34.2144 25.0308 33.6115 24.8939 33.025L24.5477 31.9789L24.5931 29.8656L24.7499 27.9604C28.1454 25.7166 31.5636 23.5074 35.0038 21.3331L36.4459 23.8264C33.4271 25.663 30.4568 27.5784 27.5381 29.5707L27.4477 30.1013L27.3813 31.4759C27.6806 32.5055 27.887 33.5599 27.9983 34.6264C28.0204 35.1266 27.9634 35.6271 27.8295 36.1095C27.9577 38.3317 27.8799 40.561 27.5968 42.7688L28.0659 48.141C28.9 48.3383 29.7183 48.5974 30.514 48.9162C30.9415 49.1346 31.3393 49.4072 31.6973 49.7274C33.3108 50.2664 34.9428 50.7483 36.5903 51.1723C38.4894 51.3991 40.3687 51.7693 42.2121 52.2796L43.278 52.6717C43.6002 52.8738 43.9193 52.9703 44.1391 53.2809C45.205 53.673 46.2769 54.2761 47.3549 55.0902L51.2694 55.507C52.0139 55.2793 52.7457 55.0118 53.4616 54.7055L53.567 54.7025L54.5999 53.9339L55.3227 53.3854C55.5335 53.3794 55.6329 53.1654 55.8406 53.0539L56.467 52.8249L57.0874 52.3848L57.9155 51.8333L59.361 50.7362L59.364 50.8418Z\" fill=\"#473E3F\"/>\n            <path d=\"M65.8031 47.2799L66.0109 47.1684C66.4445 46.7904 66.8226 46.353 67.1342 45.8693L67.5408 45.3297L67.7456 45.1127L68.3659 44.6727L69.5042 43.9012L69.712 43.7896L70.4318 43.1356L70.5222 42.605L70.4832 41.2334L70.2304 39.7622C70.2161 39.3656 70.2764 38.9698 70.4082 38.5955L70.3932 38.068C70.4462 36.9417 70.4142 35.813 70.2972 34.6916L70.1469 33.1119L69.8581 30.3745L69.7227 29.3224C69.6628 28.8324 69.6487 28.3378 69.6807 27.8452C69.697 27.3524 69.683 26.8591 69.6388 26.368C69.5196 25.6504 69.3228 24.9478 69.0518 24.2728C68.3769 22.8737 67.2787 21.7231 65.9133 20.9847C64.5479 20.2462 62.9847 19.9575 61.446 20.1594C60.501 20.0351 59.5444 20.0268 58.5974 20.1348C57.5752 20.144 56.5532 20.1025 55.5351 20.0106L53.096 19.5519L50.3349 18.8912C49.0309 18.6262 47.7229 18.3818 46.4114 18.158L45.785 18.387L43.7071 19.502C41.2101 20.7731 38.7852 22.1817 36.4436 23.7212L34.8992 21.3363C38.1276 19.3799 41.4167 17.5256 44.7615 15.7761L45.5956 15.4356L46.9657 15.3967C50.0267 15.9123 53.0696 16.5302 56.0894 17.2493L57.1434 17.2193C58.1278 17.2356 59.1124 17.2076 60.0943 17.1355L61.7896 17.4041C63.1657 17.5762 64.4424 17.9623 65.6227 18.6679C67.5087 19.7928 69.3385 21.0095 71.1057 22.3136L71.5452 22.9347L71.6566 23.1427L71.8884 23.8753C72.3476 25.2287 72.5665 26.652 72.5353 28.0809C72.531 28.4328 72.541 28.7848 72.5653 29.136L72.5953 30.1911C72.7127 31.6014 72.8934 33.0057 73.1368 34.3997C73.2174 36.0897 73.195 37.783 73.07 39.4703L73.073 39.5758L73.2084 40.6279L73.4642 42.2046L73.3828 43.0517L73.1116 44.6434L71.4613 45.9575L71.4643 46.063C70.8286 46.5165 70.2088 46.992 69.6062 47.4886C69.3041 47.8854 68.9609 48.2492 68.5823 48.5737C68.1727 48.9818 67.7238 49.3482 67.2422 49.6677L66.6188 50.0023C66.408 50.0083 66.1972 50.0142 65.9924 50.2313C64.9215 50.6513 63.8784 51.1395 62.8697 51.6928C62.3577 52.2353 61.635 52.7839 61.0116 53.1184L60.1385 52.0872L59.3647 50.842C60.3875 50.1784 61.3878 49.4808 62.3641 48.7504C63.1729 48.3227 64.0076 47.9463 64.8635 47.6234\" fill=\"#473E3F\"/>\n            <path opacity=\"0.1\" d=\"M31.3866 31.3626L32.1843 33.4519L31.8287 35.7851L31.031 33.6958L29.7153 31.9381L31.3866 31.3626ZM38.0546 47.0128L37.8858 48.496L37.2804 49.4635L38.3253 49.117L38.6115 48.0529L38.0546 47.0128ZM43.5551 29.0104L42.1186 30.424L40.7725 31.307L37.8365 31.9184L39.8904 29.9593L41.4593 29.4923L43.9437 27.8377L43.5551 29.0104Z\" fill=\"white\"/>\n            <path opacity=\"0.1\" d=\"M27.1791 35.4947L30.9578 38.5553L31.7615 40.8556L33.9353 43.1169L33.7815 45.1277L32.4624 46.9603L33.0583 49.3722L32.9195 51.9105L26.9426 49.4404L25.5005 46.947L25.1548 42.2049L25.9893 38.1685L26.3359 35.5187L27.1791 35.4947Z\" fill=\"black\"/>\n            <path d=\"M55.1377 17.1703L56.8664 14.9036C57.2967 14.4458 57.6717 13.9389 57.9837 13.3934C58.7457 12.3041 59.4185 11.1549 59.9956 9.9571L60.3028 9.63158L60.7064 8.98652C61.0496 8.38142 61.3147 7.7352 61.4955 7.06332L61.6853 6.31874C62.0049 5.83823 62.3435 5.37065 62.7003 4.91711C65.6882 4.87406 68.6764 4.85953 71.6646 4.87352L71.5926 2.34121C68.2181 2.2592 64.8418 2.28473 61.469 2.41775C60.7769 3.34084 60.1002 4.27538 59.4391 5.221C59.2357 6.15075 58.9063 7.04831 58.4602 7.88878L57.9512 8.53684C56.5451 11.4534 54.6596 14.1128 52.3735 16.404L55.1377 17.1703Z\" fill=\"#473E3F\"/>\n            <path d=\"M81.8504 36.6862L81.9558 36.6832C82.4202 36.6672 82.8798 36.583 83.3199 36.4332L83.4253 36.4302C83.5246 36.2162 83.7354 36.2102 83.9432 36.0987L86.1565 36.0358L86.9966 35.9063L87.3008 35.4753L87.4002 35.2613L87.7977 34.4052L88.2917 33.2296C88.4391 32.9068 88.6454 32.6144 88.9001 32.3675L89.2073 32.042C89.7376 31.2195 90.2067 30.3591 90.6108 29.4677L91.2071 28.1836L92.2011 26.0434L92.5987 25.1873C92.8028 24.8087 93.0396 24.4486 93.3064 24.1112C93.534 23.6972 93.7332 23.2681 93.9028 22.8271C94.1162 22.2759 94.2766 21.7056 94.3818 21.1239C94.3668 20.5963 94.144 20.1803 93.9212 19.7642L92.4521 16.3212C92.0096 15.5946 91.567 14.868 90.9167 14.2529C90.2968 13.6962 89.61 13.2191 88.8722 12.8326C88.129 12.3624 87.4104 11.8541 86.7194 11.3098L85.3043 9.7661L83.5671 8.0203C82.7829 7.18591 81.9859 6.36367 81.1765 5.5539L80.6435 5.35785L78.6321 5.09822C76.2459 4.87862 73.8485 4.8057 71.4534 4.87987L71.3814 2.34756C74.5916 2.43353 77.7982 2.62413 80.9961 2.91907L81.8452 3.10613L82.4866 3.40469L82.8118 3.71225L85.3078 6.17566L86.8342 7.92744C87.5449 8.62344 88.2676 9.30699 89.002 9.97779C89.6959 10.4839 90.4133 10.9569 91.1519 11.3951L92.2358 12.4202C93.2053 13.1319 93.8647 14.0635 94.4246 15.2092C95.2841 17.1542 96.0446 19.1415 96.7034 21.1635C96.5866 22.0852 96.3274 22.9832 95.9352 23.8253C95.7115 24.4341 95.4088 25.0108 95.0347 25.5405C94.7269 26.0542 94.46 26.5914 94.2365 27.1471C93.655 28.2994 93.1253 29.4772 92.6492 30.677C91.8537 32.2785 90.9459 33.8217 89.9326 35.2949L89.4416 36.576L88.9326 37.2241L88.0141 38.3062L86.3338 38.5651L85.9123 38.5771C85.3498 38.5743 84.7874 38.5903 84.226 38.625C83.8934 38.8077 83.5446 38.9591 83.184 39.0771C82.7 39.1793 82.2063 39.2287 81.7116 39.2245L81.0792 39.2425L80.5462 39.0464C79.6019 38.8725 78.6474 38.7586 77.6887 38.7053L72.3227 39.1746L72.88 36.5188L77.5113 36.1759L78.5652 36.146C79.3492 36.2118 80.1279 36.3308 80.8958 36.5021L81.8504 36.6862ZM25.1485 45.6897L13.5554 46.0192C12.6336 45.8908 11.7149 45.7409 10.8002 45.5695C10.3144 45.4568 9.81733 45.4 9.31868 45.4004L8.05397 45.4364C7.79165 45.4852 7.52053 45.442 7.28632 45.314C7.05212 45.186 6.86915 44.981 6.76827 44.7337L4.82366 39.4035L4.81166 38.9814C4.78766 38.4826 4.70277 37.9885 4.55889 37.5103C4.28812 36.2556 3.90012 35.0292 3.40001 33.8473L3.37002 32.7921C3.21226 32.311 2.98616 31.8551 2.69868 31.4384C2.53199 31.1166 2.34704 30.8045 2.14473 30.5038L1.78057 28.8246L1.5248 27.2479C3.77856 24.5902 6.05947 21.9556 8.36715 19.3447L10.002 21.199C7.96888 23.5264 5.99661 25.9064 4.0872 28.3366L4.33397 29.5968C4.81377 30.3565 5.22484 31.1577 5.56226 31.9906C5.71158 32.3947 5.79491 32.8202 5.80903 33.2508C6.41214 35.0249 6.85239 36.8504 7.12429 38.7045L8.72274 42.9886C9.43006 42.9882 10.1365 43.0387 10.8366 43.1397C11.272 43.1741 11.7006 43.2685 12.1103 43.4203L13.6972 43.5864L25.0855 43.4739L25.1485 45.6897Z\" fill=\"#473E3F\"/>\n            <path d=\"M39.0578 19.2121L37.4804 15.6666C37.2398 15.1173 36.9421 14.5948 36.5922 14.1079L35.3125 13.6162C34.2466 13.2241 32.9819 13.2601 31.916 12.868C31.0669 12.6809 30.3261 12.5964 29.5914 12.7229L28.2213 12.7618C27.446 12.9661 26.6786 13.1993 25.9206 13.4608L24.6619 13.7078L22.5541 13.7677L20.1361 14.0476C19.0123 14.1321 17.89 14.2344 16.7695 14.3545L16.3569 14.683L14.812 15.9941C13.0791 17.6382 11.4383 19.3769 9.89717 21.2025L8.16291 19.5622C10.3115 17.2124 12.5331 14.9306 14.8245 12.7202L15.4448 12.2802L16.1736 11.9427L16.5951 11.9307C18.52 11.7221 20.4498 11.5616 22.3827 11.4494L23.9576 11.1934L25.2223 11.1575L26.3756 10.9135L27.6253 10.35C28.1523 10.335 29.0074 10.7331 29.426 10.6156C30.5823 10.4771 31.4285 10.5587 32.5938 10.7368C33.6597 11.1289 34.9214 10.9874 36.0927 11.3765L37.8 12.0672C38.0108 12.0612 38.1221 12.2692 38.2305 12.3717C38.4207 12.6072 38.6034 12.8485 38.7785 13.0953L41.2351 17.883\" fill=\"#473E3F\"/>\n        </g>\n        <defs>\n            <clipPath id=\"clip0_2484_1980\">\n                <rect width=\"97\" height=\"57\" fill=\"white\" transform=\"translate(0.211914 3.31445) rotate(-1.62806)\"/>\n            </clipPath>\n        </defs>\n    </svg>\n</template>\n","<template>\n    <svg width=\"53\" height=\"45\" viewBox=\"0 0 53 45\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g clip-path=\"url(#clip0_2484_2107)\">\n            <path d=\"M2.77226 33.8456C1.47226 26.8656 6.35225 21.6456 14.3723 17.5956C17.1523 16.2056 22.9623 15.1956 24.2923 10.4156C25.6223 5.64561 22.2923 1.02561 26.1823 2.66561C31.798 5.30277 37.0539 8.6465 41.8223 12.6156C46.0023 16.0456 52.8823 23.0256 50.2223 32.1256C47.0323 43.1856 37.8223 41.6756 32.4223 42.0856C23.7423 42.7856 21.4423 42.4556 14.9323 42.1656C10.2323 41.9656 4.21226 41.5556 2.77226 33.8456Z\" fill=\"#A57A5D\"/>\n            <path opacity=\"0.16\" d=\"M27.5823 6.17578C27.5823 6.17578 31.1323 11.2358 29.3623 14.6558C29.3623 14.6558 16.5223 20.7458 12.3823 23.3558C8.24229 25.9558 6.88229 29.3958 7.35229 33.5558C8.13229 39.7558 15.5623 40.0058 15.5623 40.0058C15.5623 40.0058 10.3923 38.2858 13.0923 33.5958C16.3823 27.7958 28.8023 27.1058 31.9923 26.1658C35.1623 25.2258 38.8223 22.0458 38.6423 18.4958C38.4523 14.9458 35.2423 11.5158 32.9423 9.68578C31.2429 8.38766 29.4515 7.21458 27.5823 6.17578Z\" fill=\"white\"/>\n            <path opacity=\"0.11\" d=\"M46.4016 18.0859C46.4016 18.0859 48.4016 21.5559 47.3316 25.0259C47.3316 25.0259 43.0816 31.0259 39.4516 32.1259L23.0316 36.8259L18.8916 40.7759L32.1716 43.0659L45.3016 39.4659L48.1416 36.2859L49.6616 33.5959L50.4016 30.1259L50.6616 26.8259L49.6616 21.6359L46.4116 18.0859H46.4016Z\" fill=\"black\"/>\n            <path opacity=\"0.97\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.42232 34.086C1.09538 32.4963 1.08974 30.8571 1.40573 29.2651C1.72173 27.6731 2.35297 26.1604 3.26232 24.816C3.71232 24.126 4.21232 23.476 4.76232 22.856C5.33437 22.2155 5.94554 21.611 6.59232 21.046C8.00827 19.8462 9.52373 18.769 11.1223 17.826C11.9923 17.306 12.8723 16.826 13.7723 16.376C14.1323 16.196 14.5023 16.036 14.8723 15.876L16.0723 15.416C16.8223 15.136 17.5723 14.836 18.2923 14.516C19.0223 14.206 19.7123 13.826 20.3723 13.396C20.9823 12.996 21.5223 12.506 21.9923 11.946C22.4423 11.386 22.7723 10.746 22.9723 10.046C23.1723 9.31604 23.2723 8.55604 23.2523 7.79604C23.2523 7.32604 23.2323 6.85604 23.1823 6.39604L23.0223 5.08604L22.9023 4.19604C22.8664 3.91406 22.8463 3.63028 22.8423 3.34604C22.8423 3.11604 22.8623 2.89604 22.9023 2.67604C22.9523 2.38604 23.0523 2.11604 23.2023 1.87604C23.388 1.57829 23.6502 1.33585 23.9615 1.17402C24.2729 1.01219 24.622 0.936911 24.9723 0.95604C25.2723 0.96604 25.5623 1.00604 25.8423 1.09604C26.1423 1.17604 26.4423 1.29604 26.7423 1.41604C32.473 4.10556 37.8365 7.51653 42.7023 11.566C43.7508 12.4213 44.7523 13.3326 45.7023 14.296C46.828 15.4336 47.855 16.6647 48.7723 17.976C49.7753 19.3994 50.592 20.9453 51.2023 22.576C51.8523 24.336 52.1823 26.176 52.2023 28.056C52.1923 29.556 51.9723 31.056 51.5423 32.506C51.2123 33.6791 50.7703 34.8176 50.2223 35.906C49.7423 36.846 49.1523 37.746 48.4723 38.556C47.2738 39.9693 45.7691 41.0911 44.0723 41.836C43.3123 42.186 42.5023 42.456 41.6823 42.656C40.9023 42.856 40.1023 42.996 39.3023 43.096C38.5323 43.186 37.7723 43.246 37.0023 43.286C36.2923 43.316 35.5723 43.346 34.8623 43.356C34.0923 43.366 33.3123 43.396 32.5423 43.456C30.8823 43.586 29.2323 43.696 27.5723 43.776C24.2767 43.9442 20.9739 43.9108 17.6823 43.676L14.8823 43.536C14.2723 43.516 13.6523 43.476 13.0323 43.436C12.3823 43.386 11.7223 43.316 11.0723 43.226C10.3923 43.126 9.71232 42.976 9.05232 42.796C8.36232 42.606 7.69232 42.356 7.05232 42.056C4.8537 41.0198 3.13588 39.1803 2.25232 36.916C1.88232 36.016 1.60232 35.056 1.43232 34.086H1.42232ZM25.6323 3.91604C31.1335 6.50415 36.2818 9.784 40.9523 13.676C41.9223 14.476 42.8523 15.316 43.7423 16.216C44.755 17.2459 45.6783 18.3599 46.5023 19.546C47.3698 20.7773 48.0756 22.1149 48.6023 23.526C49.1423 24.976 49.4223 26.516 49.4323 28.056C49.4323 29.306 49.2423 30.556 48.8823 31.756C48.6023 32.756 48.2223 33.736 47.7523 34.666C47.3623 35.426 46.8923 36.146 46.3523 36.796C45.4292 37.8927 44.2657 38.7618 42.9523 39.336C42.3223 39.616 41.6723 39.836 41.0023 39.996C40.3323 40.166 39.6423 40.296 38.9523 40.376C38.2523 40.456 37.5523 40.516 36.8523 40.546C36.1723 40.586 35.4823 40.606 34.7923 40.616C33.9623 40.626 33.1423 40.666 32.3123 40.716C30.6923 40.856 29.0523 40.956 27.4123 41.036C24.2131 41.1916 21.0076 41.1582 17.8123 40.936L14.9823 40.796C14.3923 40.776 13.8023 40.736 13.2123 40.696C12.6123 40.656 12.0323 40.596 11.4423 40.506C10.8723 40.426 10.3123 40.306 9.75232 40.156C9.22384 40.0098 8.70868 39.8191 8.21232 39.586C7.23275 39.1126 6.37683 38.4175 5.71232 37.556C5.33213 37.0397 5.01646 36.4789 4.77232 35.886C4.21844 34.5407 3.92981 33.1009 3.92232 31.646C3.92232 30.396 4.17232 29.156 4.66232 27.996C5.17201 26.7706 5.89675 25.6463 6.80232 24.676C7.30232 24.116 7.82232 23.596 8.38232 23.106C9.67249 22.0174 11.0505 21.0374 12.5023 20.176C13.3123 19.696 14.1423 19.246 14.9823 18.826C15.2823 18.676 15.5823 18.546 15.8823 18.426L17.0223 17.986C17.8223 17.686 18.6123 17.366 19.3923 17.026C20.2523 16.646 21.0923 16.206 21.8723 15.686C22.7159 15.1365 23.4711 14.4622 24.1123 13.686C24.8064 12.8328 25.317 11.8455 25.6123 10.786C25.8723 9.79604 26.0023 8.78604 25.9923 7.77604C25.9923 7.21604 25.9623 6.66604 25.8923 6.10604C25.8258 5.37334 25.7357 4.64297 25.6223 3.91604H25.6323Z\" fill=\"#463F3F\"/>\n        </g>\n        <defs>\n            <clipPath id=\"clip0_2484_2107\">\n                <rect width=\"52\" height=\"44\" fill=\"white\" transform=\"translate(0.501953 0.71582)\"/>\n            </clipPath>\n        </defs>\n    </svg>\n</template>\n","<template>\n    <span class=\"w-full px-6  mb-[36px] text-[24px] text-t_black-800 dark:text-t_white-200 font-fira font-semibold\">So I rebaited the trap withâ€¦</span>\n    <div class=\"grid grid-cols-2 gap-3 mt-4 px-4\" v-if=\"!show_all\">\n        <div v-for=\"(sp, index) in bait\" :key=\"index\" @click=\"selected({ rebaited: 'Yes', bait_type: sp, words: `so I rebaited it with ${sp}`, step:6 })\"\n             class=\"grid grid-cols-1 col-1 w-full mx-auto rounded-[4px] dark:bg-t_black-800 px-[10px] py-[8px]\n             justify-items-center bg-white\">\n            <span class=\"justify-self-start text-[18px] font-fira font-medium dark:text-t_white-200\">{{sp}}</span>\n                <chocolate class=\"w-full\" v-if=\"sp === 'Chocolate'\"/>\n                <peanut-butter class=\"w-full\" v-if=\"sp=== 'Peanut Butter'\"/>\n                <whole-egg class=\"w-full\" v-if=\"sp=== 'Whole egg'\"/>\n                <dehydrated-rabbit class=\"w-full\" v-if=\"sp=== 'Dehydrated Rabbit'\"/>\n                <goodnature-rat class=\"w-full\" v-if=\"sp=== 'Goodnature Rat and Mouse Lure'\"/>\n\n        </div>\n        <div @click='show_all = true'\n             class=\"grid grid-cols-1 col-1 w-full mx-auto rounded-[4px] dark:bg-t_black-800 px-[10px] py-[8px]\n             justify-items-center bg-white\">\n            <span class=\"text-[18px] font-fira font-medium dark:text-t_white-200\">Something else</span>\n            <somthing-else/>\n        </div>\n    </div>\n    <div class=\"flex flex-wrap overflow-hidden mx-[24px]\" v-if=\"show_all\">\n        <panel v-for=\"(sp, index) in extraBait\" :key=\"index\" @click=\"selected({ rebaited: 'Yes', bait_type: sp, words: `so I rebaited it with ${sp}` , step:6 })\" :text=\"sp\"/>\n        <div class=\"mb-3 mx-auto\">\n            <Tertiary @click=\"show_all = false\" >Show Less Items</Tertiary>\n        </div>\n    </div>\n    <div class=\"flex flex-col h-full mt-[24px] px-4 \">\n        <panel @click=\"selected({rebaited: 'No', words: `and the bait was still good so I didn't rebait it.`, step:6  })\"  text=\"Bait is still good\">\n            <template #svg>\n                <good/>\n            </template>\n        </panel>\n        <panel @click=\"selected({rebaited: 'No', bait_type: 'None', words: 'and I\\'m just letting you know.', upload_to_nz: false, step:6  })\" text=\"Just letting you know\" small_text=\"that the trap caught something and/or it needs rebaiting.\">\n            <template #svg>\n                <man-wit-box class=\"-mt-1\"/>\n            </template>\n        </panel>\n    </div>\n</template>\n\n<script>\nimport Panel from \"@/Components/Panel.vue\";\nimport Tertiary from \"@/UI/Buttons/Tertiary.vue\";\nimport SomthingElse from \"@/Components/SVG/SomthingElse.vue\";\nimport Chocolate from \"@/Components/SVG/Foods/Chocolate.vue\";\nimport PeanutButter from \"@/Components/SVG/Foods/PeanutButter.vue\";\nimport WholeEgg from \"@/Components/SVG/Foods/WholeEgg.vue\";\nimport DehydratedRabbit from \"@/Components/SVG/Foods/DehydratedRabbit.vue\";\nimport GoodnatureRat from \"@/Components/SVG/Foods/GoodnatureRat.vue\";\nimport Good from \"@/Components/SVG/Good.vue\";\nimport ManWitBox from \"@/Components/SVG/ManWitBox.vue\";\nexport default {\n    name: \"StepFive\",\n    components:{\n        ManWitBox,\n        Good,\n        GoodnatureRat,\n        DehydratedRabbit,\n        WholeEgg,\n        PeanutButter,\n        Chocolate,\n        Panel,\n        Tertiary,\n        SomthingElse\n\n    },\n    data() {\n        return {\n            show_all:false,\n            bait: ['Peanut Butter', 'Goodnature Rat and Mouse Lure', 'Dehydrated Rabbit', 'Whole egg', 'Chocolate'],\n            extraBait: ['Carrot', 'Cereal', 'Cheese', 'Dried fruit', 'Ferret Bedding', 'Fresh Fruit', 'Fresh Meat', 'Fresh Possum', 'Fresh Rabbit', 'Golf ball', 'â€‹Goodnature Stoat Lure', 'Lure', 'Lure-it Salmon Spray', 'Mayo', 'Mustelid and Cat Lure', 'Nut', 'Nutella', 'Possum Dough', 'Rat and Possum Lure', 'Rat oil', 'Salted meat', 'Salted Possum', 'Salted Rabbit', 'Smooth', 'Terracotta Lures', 'Tinned Sardines', 'None']\n\n        }\n    },\n    methods:{\n        selected (val){\n            this.$emit('selected',val)\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n    <svg width=\"31\" height=\"29\" viewBox=\"0 0 31 29\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M5.25187 13.5003C4.93932 13.3011 4.02224 12.7515 3.75186 12.4996C3.33279 12.1092 2.52466 10.7565 2.25134 10.0001C2.05818 9.46558 1.96097 8.1165 1.96097 8.1165C1.87343 7.90244 2.21435 6.3169 2.42565 6.47484C2.70498 6.68361 2.95349 7.59009 3.25148 8.1165C3.75148 8.99977 3.60198 8.9761 4.24222 9.5726C4.8231 10.1138 5.89799 10.3807 6.76607 10.3807C7.20011 10.3807 7.97712 9.9467 8.11739 8.65342C7.97712 7.7765 8.06819 7.34246 7.20011 6.47439C6.76607 6.11417 5.33586 5.13177 5.08902 4.94497C4.8566 4.76909 4.84559 4.89053 4.59587 4.73823C4.343 4.584 5.42042 4.51319 5.59703 4.49176C7.32698 4.28189 9.05455 4.57103 10.4832 5.50033C11.2519 6.00033 11.2519 6.00033 11.7519 7.50033C12.0192 8.30239 11.9199 9.22525 11.7382 9.57205C11.2519 10.5003 10.833 10.9923 10.4832 11.3677C9.6743 12.2359 9.00243 12.8633 7.97712 13.48C7.08787 14.015 6.12469 13.9869 5.25187 13.5003ZM5.25187 13.5003C5.467 13.6374 5.03932 13.3818 5.25187 13.5003Z\" stroke=\"#8A8A8A\" stroke-width=\"1.4\" stroke-linecap=\"round\"/>\n        <path d=\"M9.10746 13.3332C10.4775 14.6097 11.5496 15.9027 13.0496 16.9027M14.7452 14.6564C14.1825 14.2114 13.5656 13.7712 13.0293 13.3033C12.2522 12.6252 12.5496 12.9024 10.5496 11.4024\" stroke=\"#8A8A8A\" stroke-width=\"1.4\" stroke-linecap=\"round\"/>\n        <path d=\"M16.0502 19.4025C18.5502 21.4027 18.3095 21.2464 19.5501 22.4023M19.5501 22.4023C20.0221 22.842 19.0669 21.9756 19.5501 22.4023ZM19.5501 22.4023C19.9399 22.7464 21.2338 24.2449 22.2299 24.2449C23.7353 24.0375 23.9383 23.0381 23.5501 21.9023C23.1978 20.8712 21.517 19.7779 20.5502 18.9025C19.3622 17.8268 20.5502 18.9025 18.0502 16.9027\" stroke=\"#8A8A8A\" stroke-width=\"1.4\" stroke-linecap=\"round\"/>\n        <path d=\"M25.3505 6.03319C26.526 6.89359 27.1668 7.77652 28.2688 8.94382C28.5001 9.33046 28.8053 9.57611 28.542 9.94672C28.1849 10.4494 27.1668 11.2488 26.7327 11.6829C25.8647 12.5509 25.6049 12.9743 24.835 13.7802C24.288 14.3528 23.8856 13.7848 23.2713 13.3484C22.639 12.8992 22.0562 12.43 21.5078 11.8811C20.9094 11.2821 20.1826 10.8409 19.4955 10.3443C18.3151 9.4912 17.3342 8.42784 16.1758 7.55702C15.0808 6.73397 16.2216 5.35608 17.0369 4.95206C17.8736 4.53741 18.92 3.43625 18.92 3.43625C18.92 3.43625 19.4178 3.11106 19.7881 3.00221C19.9002 2.96926 20.3773 2.67416 20.5077 2.69567C21.0881 2.79139 22.1379 3.75086 22.612 4.08768C23.5245 4.7359 24.4474 5.37211 25.3505 6.03319Z\" stroke=\"#8A8A8A\" stroke-width=\"1.4\" stroke-linecap=\"round\"/>\n        <path d=\"M18.7202 10.475C16.5105 12.7738 14.7857 15.454 12.6092 17.7859C11.5799 18.8886 10.4727 19.9291 9.39896 20.99C8.98954 21.3945 8.58011 21.7991 8.17068 22.2036C7.8841 22.4868 7.0122 23.1394 6.92405 23.5079C6.76778 24.1611 7.10595 24.2707 7.54084 24.7108C7.75849 24.9311 7.97127 25.2414 8.23899 25.4065C8.95085 25.8454 9.40036 25.7733 10.2244 24.9591C11.5207 23.6783 12.7333 22.3351 14.0278 21.0561C15.0365 20.0594 15.7488 18.9535 16.626 17.8767C17.2213 17.1459 17.7166 16.3222 18.3651 15.6187C18.781 15.1675 19.347 14.6551 19.67 14.1441C19.8849 13.8042 21.1215 12.3335 21.0705 12.0675\" stroke=\"#8A8A8A\" stroke-width=\"1.4\" stroke-linecap=\"round\"/>\n    </svg>\n\n</template>\n\n","<template>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"44\" height=\"44\" viewBox=\"0 0 44 44\" class=\"v-icon__component theme--light\" style=\"font-size: 40px; height: 40px; width: 40px;\"><defs><mask id=\"a\" x=\"6.1\" y=\"4.25\" width=\"11.67\" height=\"11.67\" maskUnits=\"userSpaceOnUse\"><rect x=\"7.89\" y=\"6.05\" width=\"8.08\" height=\"8.08\" rx=\"0.9\" fill=\"#fff\"></rect></mask><mask id=\"b\" x=\"23.15\" y=\"4.25\" width=\"11.67\" height=\"11.67\" maskUnits=\"userSpaceOnUse\"><rect x=\"24.94\" y=\"6.05\" width=\"8.08\" height=\"8.08\" rx=\"0.9\" fill=\"#fff\"></rect></mask><mask id=\"c\" x=\"5.77\" y=\"22.77\" width=\"12.31\" height=\"12.31\" maskUnits=\"userSpaceOnUse\"><rect x=\"7.89\" y=\"24.89\" width=\"8.08\" height=\"8.08\" rx=\"0.9\" transform=\"translate(-18.13 37.63) rotate(-83.74)\" fill=\"#fff\"></rect></mask></defs><path d=\"M32.4,30.08c.87,1.55,2.09,4.91,2.77,6.52.08.19.26.48.09.56-.68.32-1.34.67-2,1s-1.15.31-1.7.52c-.16.06-.32.09-.47.16s-.2.13-.26-.16A21.77,21.77,0,0,0,29.84,36\" fill=\"none\" stroke=\"#777\" stroke-linecap=\"round\" stroke-width=\"1.79\"></path><path d=\"M22.06,7a19.47,19.47,0,0,0-3.36.25,3.49,3.49,0,0,0,0,.79,15.63,15.63,0,0,0,.05,1.81c0,.3,0,1,.41,1a17.69,17.69,0,0,0,2.3-.09c.76,0,.71.24.8.93.13,1.06-.2,2.11-.15,3.17,0,.19.29,1.36-.18,1\" fill=\"none\" stroke=\"#5e91b3\" stroke-linecap=\"round\" stroke-width=\"1.79\"></path><path d=\"M22.25,29.27a6.17,6.17,0,0,0,.51-1.4c.12-.34,2.89.82,3.67,1s.42.83.2,1.45\" fill=\"none\" stroke=\"#758d9d\" stroke-linecap=\"round\" stroke-width=\"1.79\"></path><path d=\"M31.24,17.32a27.44,27.44,0,0,1,1.92,3.05c0,.09.12.17,0,.22-.64.31-1.3.57-1.94.85a12.14,12.14,0,0,0-1.81,1c-.41.27-.44.19-.17.79a19.86,19.86,0,0,0,1.12,2c.07.12.12.1.23,0a14.24,14.24,0,0,1,2-.92A13.25,13.25,0,0,0,35,23.08\" fill=\"none\" stroke=\"#758d9d\" stroke-linecap=\"round\" stroke-width=\"1.79\"></path><path d=\"M20.2,23c-.42-.17-2.8-1.25-3.2-1.5,0,0,.07-.26.08-.27.18-.46.86-1.68,1.05-2.14\" fill=\"none\" stroke=\"#5e91b3\" stroke-linecap=\"round\" stroke-width=\"1.79\"></path><path d=\"M9.38,17.27c.06,1.34,0,2.15,0,3.5,0,.06,0,.16.08.18a9.46,9.46,0,0,0,1.18.13c.15,0,1.43-.18,1.29-.13\" fill=\"none\" stroke=\"#5e91b3\" stroke-linecap=\"round\" stroke-width=\"1.79\"></path><path d=\"M15.55,17.44c.51.24,2.27,1.13,2.79,1.46\" fill=\"none\" stroke=\"#5e91b3\" stroke-linecap=\"round\" stroke-width=\"1.79\"></path><path d=\"M26.43,30.64a14.91,14.91,0,0,0,1.92.64,5.32,5.32,0,0,1,.57.16.64.64,0,0,0,.42.09\" fill=\"none\" stroke=\"#758d9d\" stroke-linecap=\"round\" stroke-width=\"1.79\"></path><path d=\"M18.34,35.15a12.16,12.16,0,0,1,1.79-1.08,1.7,1.7,0,0,1,.24-.09c.22,0,.61.82.7,1a21,21,0,0,1,1.24,2.15c.07.15.24.77.43.73\" fill=\"none\" stroke=\"#717e87\" stroke-linecap=\"round\" stroke-width=\"1.79\"></path><g mask=\"url(#a)\"><rect x=\"7.89\" y=\"6.05\" width=\"8.08\" height=\"8.08\" rx=\"0.9\" fill=\"none\" stroke=\"#5e91b3\" stroke-linejoin=\"round\" stroke-width=\"3.59\"></rect></g><g mask=\"url(#b)\"><rect x=\"24.94\" y=\"6.05\" width=\"8.08\" height=\"8.08\" rx=\"0.9\" fill=\"none\" stroke=\"#5e91b3\" stroke-linejoin=\"round\" stroke-width=\"3.59\"></rect></g><g mask=\"url(#c)\"><rect x=\"7.89\" y=\"24.89\" width=\"8.08\" height=\"8.08\" rx=\"0.9\" transform=\"translate(-18.13 37.63) rotate(-83.74)\" fill=\"none\" stroke=\"#5e91b3\" stroke-linejoin=\"round\" stroke-width=\"3.59\"></rect></g></svg>\n\n</template>\n","<template>\n    <div class=\"flex flex-wrap overflow-hidden mx-[24px]\">\n        <panel  @click='selected(0)' text=\"Needs repair or replacing\">\n            <template #svg>\n                <repair/>\n            </template>\n        </panel>\n        <panel  @click='selected(1)' text=\"Trap is missing\">\n            <template #svg>\n                <empty-svg/>\n            </template>\n        </panel>\n        <panel  @click='selected(2)' text=\"QR code needs fixing\">\n            <template #svg>\n                <wrong-qr/>\n            </template>\n        </panel>\n    </div>\n</template>\n\n<script>\nimport Panel from \"@/Components/Panel.vue\"\nimport Repair from \"@/Components/SVG/Repair.vue\";\nimport EmptySvg from \"@/Components/SVG/EmptySvg.vue\";\nimport WrongQr from \"@/Components/SVG/WrongQr.vue\";\n\nexport default {\n    name: \"StepFour\",\n    components:{\n        WrongQr,\n        Repair,\n        Panel,\n        EmptySvg,\n    },\n    data() {\n        return {\n            values:[\n                {\n                    trap_condition: 'Needs maintenance',\n                    status: 'Removed for Repair',\n                    words: 'The trap or trap box needs repair or replacing.',\n                    step:6\n                },\n                {\n                    trap_condition: 'Needs maintenance',\n                    status: 'Trap gone',\n                    words: 'The trap is missing.',\n                    step:6\n                },\n                {\n                    trap_condition: 'Needs maintenance',\n                    status: 'Removed for Repair',\n                    words: 'The QR code is wrong, missing or not working.',\n                    step:6\n                }\n            ]\n        }\n    },\n    methods:{\n        selected (val){\n            this.$emit('selected',this.values[val])\n        }\n    }\n}\n</script>\n","<template>\n    <svg class=\"dark:text-gray-300 mt-1\" width=\"24\" height=\"25\" viewBox=\"0 0 24 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M15.3166 4.21806C11.3199 8.22064 2.49006 16.428 3.00984 16.3966C3.00984 16.3966 3.76318 16.4205 5.22029 18.4412C5.72551 19.1418 8.67665 19.6846 9.34557 18.739C9.67143 18.2784 11.8677 15.8612 12.4329 15.2584C14.9913 12.5304 17.1301 9.39572 19.8067 6.77893C20.2564 6.33923 21.5921 5.57401 20.5803 4.98891C20.1624 4.74725 18.8863 4.10578 18.4355 4.02953C17.6631 3.89892 17.6024 3.84363 16.8433 3.58109C15.8331 3.23175 16.1152 3.41828 15.3166 4.21806Z\" fill=\"#FFC700\"/>\n        <path d=\"M12.4329 15.2584C14.9913 12.5304 17.1301 9.39572 19.8067 6.77893C20.2564 6.33923 21.5921 5.57401 20.5803 4.98891C20.1624 4.74725 18.8863 4.10578 18.4355 4.02953C17.6631 3.89892 17.6024 3.84363 16.8433 3.58109C15.8331 3.23175 16.1152 3.41828 15.3166 4.21806C11.3199 8.22064 2.49006 16.428 3.00984 16.3966C3.00984 16.3966 3.76318 16.4205 5.22029 18.4412C5.72551 19.1418 8.67665 19.6846 9.34557 18.739C9.67143 18.2784 11.8677 15.8612 12.4329 15.2584ZM12.4329 15.2584C11.7732 15.9619 13.1758 14.6543 12.4329 15.2584Z\" stroke=\"#5C5C5C\" stroke-width=\"1.09343\" stroke-linecap=\"round\"/>\n        <path d=\"M2.05268 20.0563C2.44222 19.0128 2.55589 17.6852 2.8791 16.6131C2.85804 16.383 5.01088 17.3406 6.00932 17.0261C6.51777 16.866 6.46615 16.7504 6.57295 17.4858C6.6781 18.2098 7.01747 18.8576 7.66695 19.1087C8.39077 19.3252 8.66106 19.153 8.71552 19.1047C8.73084 19.0911 8.72907 19.0873 8.71552 19.1047C8.71456 19.1059 8.71355 19.1073 8.71247 19.1087C8.5525 19.3241 7.84126 19.7716 7.61989 19.8919C6.53545 20.4811 5.49072 21.1523 4.37801 21.6763C3.91578 21.9069 1.00037 23.4043 1.00037 23.4043L2.05268 20.0563Z\" fill=\"#FFF6D8\"/>\n        <path d=\"M4.37801 21.6763C3.91578 21.9069 1.00037 23.4043 1.00037 23.4043L2.05268 20.0563C2.44222 19.0128 2.55589 17.6852 2.8791 16.6131C2.85804 16.383 5.01088 17.3406 6.00932 17.0261C6.51777 16.866 6.46615 16.7504 6.57295 17.4858C6.6781 18.2098 7.01747 18.8576 7.66695 19.1087C8.60876 19.3904 8.78274 19.0141 8.71247 19.1087C8.5525 19.3241 7.84126 19.7716 7.61989 19.8919C6.53545 20.4811 5.49072 21.1523 4.37801 21.6763ZM4.37801 21.6763C5.0199 21.356 3.72956 21.9816 4.37801 21.6763Z\" stroke=\"#5C5C5C\" stroke-width=\"1.09343\" stroke-linecap=\"round\"/>\n        <path d=\"M20.1807 1.55614C19.5408 1.32686 18.9053 1.0476 18.2209 1.04273C17.8955 1.39956 17.007 2.11194 16.7241 2.50161C16.4417 2.89053 16.0329 3.11923 15.8044 3.54672C15.7325 3.68124 15.3877 3.95449 15.3813 4.08365C15.3786 4.13798 15.8774 4.13988 15.9353 4.15753C16.2653 4.25822 16.614 4.28821 16.9471 4.37879C17.2083 4.44982 17.4442 4.61638 17.6932 4.72508C17.9738 4.84755 18.2573 4.97509 18.5239 5.12949C18.9656 5.38527 19.3096 5.81922 19.7029 6.14709C19.8017 6.22947 19.9066 6.27686 20.0084 6.34811C20.0774 6.39638 20.0983 6.47241 20.1906 6.48914C20.3008 6.5091 20.42 6.30918 20.481 6.2437C20.6401 6.07273 20.7932 5.88555 20.9711 5.73558C21.2472 5.50274 21.5944 5.33176 21.8428 5.06499C22.0781 4.81226 22.1604 4.44069 22.3678 4.16206C22.4888 3.99938 22.6544 3.91811 22.5481 3.67287C22.5027 3.56823 22.4138 3.4976 22.3346 3.42333C22.1234 3.22504 21.9659 2.96394 21.7811 2.73961C21.3843 2.2581 20.7592 1.76346 20.1807 1.55614Z\" fill=\"#E86969\" stroke=\"#5C5C5C\" stroke-width=\"1.09343\" stroke-linecap=\"round\"/>\n        <path d=\"M2.05151 20.4206C2.28182 20.424 2.50357 20.4824 2.72718 20.5318C2.89618 20.5691 3.06371 20.603 3.22626 20.6643C3.43689 20.7439 3.63832 20.8352 3.81803 20.9722C3.95123 21.0737 4.08377 21.1711 4.22335 21.2639C4.24099 21.2756 4.35814 21.3338 4.35363 21.3693C4.34753 21.4172 4.17547 21.4932 4.15138 21.5069C3.97179 21.6096 3.78855 21.7055 3.6034 21.7977C3.46719 21.8656 3.32781 21.941 3.17964 21.9807C2.97346 22.036 2.7577 22.0526 2.56512 22.1517C2.35628 22.2591 2.1648 22.3967 1.95288 22.4988C1.86496 22.5412 1.8501 22.5183 1.88856 22.4282C1.95722 22.2673 2.07267 22.1206 2.154 21.9652C2.24099 21.799 2.30852 21.6259 2.35821 21.445C2.3928 21.3192 2.45275 21.2055 2.49134 21.082C2.5177 20.9976 2.5099 20.8667 2.57465 20.8003C2.61525 20.7586 2.87418 21.0635 2.90792 21.0948C3.03042 21.2084 3.18999 21.3227 3.26838 21.4744C3.31945 21.5732 3.32161 21.5815 3.21716 21.5953\" stroke=\"#5C5C5C\" stroke-width=\"1.09343\" stroke-linecap=\"round\"/>\n    </svg>\n\n</template>\n","<template>\n    <div class=\"flex flex-wrap overflow-hidden mx-[24px]\">\n        <ts-label value=\"Notes\"/>\n        <ts-text-area v-model=\"val\"/>\n\n        <div class=\"flex w-full mx-auto mt-4\">\n            <primary @click='selected(0)' >submit inspection</primary>\n        </div>\n        <div class=\"flex w-full mx-auto mt-4\">\n            <secondary @click='selected(6)'>view summary first</secondary>\n        </div>\n\n    </div>\n</template>\n\n<script>\nimport ArrowUp from \"@/Components/SVG/ArrowUp.vue\";\nimport Note from \"@/Components/SVG/Note.vue\";\nimport Pen from \"@/Components/SVG/Pen.vue\";\nimport ArrowNext from \"@/Components/SVG/ArrowNext.vue\";\nimport TextVal from \"@/Components/Inspection/Other/TextVal.vue\";\nimport Secondary from \"@/UI/Buttons/Secondary.vue\";\nimport Primary from \"@/UI/Buttons/Primary.vue\";\nimport TsTextArea from \"@/Components/Textarea.vue\"\nimport TsLabel from \"@/Components/Label.vue\"\n\n\nexport default {\n    name: \"AddNote\",\n    components: {TextVal, ArrowNext, Pen, Note, ArrowUp, Primary, Secondary, TsTextArea,TsLabel},\n    props:{\n        text:String\n    },\n    data() {\n        return {\n            val:this.text\n        }\n    },\n    methods:{\n        selected (val){\n            if (val === 0){\n                this.$emit('selected',{notes: this.val, step: 0})\n            } else {\n                this.$emit('selected',{notes: this.val, step: 6})\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n    <div class=\"flex flex-wrap overflow-hidden mx-[24px]\">\n        <div class=\"relative flex w-full flex-wrap items-stretch\">\n            <ts-input v-model=\"form.QR_ID\" label=\"QR ID\" :disabled=\"true\"/>\n        </div>\n        <div class=\"relative flex w-full flex-wrap items-stretch \">\n            <ts-input v-model=\"form.date_format\" label=\"Inspection date\" type=\"datetime-local\"/>\n        </div>\n        <div class=\"relative flex w-full flex-wrap items-stretch mb-5\">\n            <ts-label value=\"Status\"/>\n            <select v-model=\"form.status\" id=\"large\" :class=\"select_class\">\n                <option v-for=\"st in status\" :key=\"st\" :value=\"st\">{{st}}</option>\n            </select>\n        </div>\n        <div class=\"relative flex w-full flex-wrap items-stretch mb-5\">\n            <ts-label value=\"Species caught\"/>\n            <select v-model=\"form.species_caught\" id=\"large\" :class=\"select_class\">\n                <option v-for=\"st in species\" :key=\"st\" :value=\"st\">{{st}}</option>\n                <option v-for=\"st in extraSpecies\" :key=\"st\" :value=\"st\">{{st}}</option>\n            </select>\n        </div>\n        <div class=\"relative flex w-full flex-wrap items-stretch mb-5\">\n            <ts-label value=\"Rebaited\"/>\n            <select v-model=\"form.rebaited\" id=\"large\" :class=\"select_class\">\n                <option value=\"Yes\">Yes</option>\n                <option value=\"No\">No</option>\n            </select>\n        </div>\n        <div class=\"relative flex w-full flex-wrap items-stretch mb-5\">\n            <ts-label value=\"Bait type\"/>\n            <select v-model=\"form.bait_type\" id=\"large\" :class=\"select_class\">\n                <option v-for=\"st in bait\" :key=\"st\" :value=\"st\">{{st}}</option>\n                <option v-for=\"st in extraBait\" :key=\"st\" :value=\"st\">{{st}}</option>\n            </select>\n        </div>\n        <div class=\"relative flex w-full flex-wrap items-stretch mb-5\">\n            <ts-label value=\"Trap condition\"/>\n            <select v-model=\"form.trap_condition\" id=\"large\" :class=\"select_class\">\n                <option v-for=\"st in trap_condition\" :key=\"st\" :value=\"st\">{{st}}</option>\n            </select>\n        </div>\n        <div class=\"relative flex w-full flex-wrap items-stretch mb-5\">\n            <ts-label value=\"Note\"/>\n            <ts-text-area v-model=\"form.notes\"/>\n\n        </div>\n\n        <div class=\"flex w-full mx-auto\">\n            <primary @click='selected(0)'>SUBMIT INSPECTION</primary>\n        </div>\n    </div>\n</template>\n\n<script>\nimport ArrowUp from \"@/Components/SVG/ArrowUp.vue\";\nimport Note from \"@/Components/SVG/Note.vue\";\nimport Pen from \"@/Components/SVG/Pen.vue\";\nimport ArrowNext from \"@/Components/SVG/ArrowNext.vue\";\nimport TextVal from \"@/Components/Inspection/Other/TextVal.vue\";\nimport Primary from \"@/UI/Buttons/Primary.vue\";\nimport TsTextArea from \"@/Components/Textarea.vue\"\nimport TsLabel from \"@/Components/Label.vue\"\nimport TsInput from \"@/Components/Input.vue\"\n\n\nexport default {\n    name: \"EditForm\",\n    components: {TextVal, ArrowNext, Pen, Note, ArrowUp, TsInput, TsLabel, TsTextArea, Primary},\n    props:{\n        text:String,\n        values:Object\n    },\n    data() {\n        return {\n            select_class:'border-t_blue_gray-700 border-[3px] dark:border-t_blue_gray-300 dark:bg-dark_input_bg w-full px-[16px] py-[13px] dark:text-t_white-200 font-fira focus:border-dark_button dark:focus:border-dark_button rounded-md shadow-sm',\n            form:{\n                QR_ID: this.values.QR_ID,\n                date_format: this.values.date_format,\n                species_caught: this.values.species_caught,\n                status: this.values.status,\n                rebaited: this.values.rebaited,\n                bait_type: this.values.bait_type,\n                trap_condition: this.values.trap_condition,\n                notes: this.values.notes,\n            },\n            status: [\n                'Sprung',\n                'Removed for Repair',\n                'Trap Replaced',\n                'Still set, bait OK',\n                'Still set, bait missing',\n                'Still set, bait bad',\n                'Trap gone',\n                'Trap interfered by stock'\n            ],\n            trap_condition: [\n                'Ok',\n                'Needs maintenance',\n                'Repaired',\n                'Regassed',\n                'Relured',\n                'Battery charge'\n            ],\n            bait: ['Peanut Butter', 'Goodnature Rat and Mouse Lure', 'Dehydrated Rabbit', 'Whole egg', 'Chocolate'],\n            extraBait: ['Carrot', 'Cereal', 'Cheese', 'Dried fruit', 'Ferret Bedding', 'Fresh Fruit', 'Fresh Meat', 'Fresh Possum', 'Fresh Rabbit', 'Golf ball', 'â€‹Goodnature Stoat Lure', 'Lure', 'Lure-it Salmon Spray', 'Mayo', 'Mustelid and Cat Lure', 'Nut', 'Nutella', 'Possum Dough', 'Rat and Possum Lure', 'Rat oil', 'Salted meat', 'Salted Possum', 'Salted Rabbit', 'Smooth', 'Terracotta Lures', 'Tinned Sardines', 'None'],\n            species: ['Rat', 'Mouse', 'Stoat', 'Weasel', 'Hedgehog'],\n            extraSpecies: ['Rat - Kiore', 'Rat - Norway', 'Unspecified', 'Bird', 'Rat - Ship', 'Cat', 'Deer', 'Dog', 'Ferret', 'Goat', 'Hare', 'Magpie', 'Peafowl', 'Pig', 'Possum', 'Rabbit', 'Turkey', 'None'],\n        }\n    },\n    mounted() {\n\n    },\n    methods:{\n        selected (){\n            this.$emit('selected',this.form)\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n    <Show>\n        <template #header>\n            <div @click=\"back\">\n                <svg  v-if=\"step !== 1\" width=\"8\" height=\"13\" viewBox=\"0 0 8 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.39316 12.0653C7.86179 11.5966 7.86179 10.8368 7.39316 10.3682L3.44168 6.41675L7.39316 2.46528C7.86179 1.99665 7.86179 1.23685 7.39316 0.76822C6.92453 0.299591 6.16473 0.299591 5.6961 0.76822L0.896099 5.56822C0.427469 6.03685 0.427469 6.79665 0.896099 7.26528L5.6961 12.0653C6.16473 12.5339 6.92453 12.5339 7.39316 12.0653Z\" fill=\"white\"/>\n                </svg>\n\n            </div>\n            <div>\n                <h1 class=\"text-white font-bold ml-1 text-[16px] font-fira tracking-wide\">{{trap_data.qr_id}}</h1>\n            </div>\n            <div>\n                <Link :href=\"route('scan')\">\n                    <svg width=\"13\" height=\"13\" viewBox=\"0 0 13 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.837327 0.709641C1.22785 0.319117 1.86102 0.319117 2.25154 0.709641L6.54443 5.00253L10.8373 0.709639C11.2279 0.319115 11.861 0.319115 12.2515 0.709639C12.6421 1.10016 12.6421 1.73333 12.2515 2.12385L7.95865 6.41675L12.2515 10.7096C12.6421 11.1002 12.6421 11.7333 12.2515 12.1239C11.861 12.5144 11.2279 12.5144 10.8373 12.1239L6.54443 7.83096L2.25154 12.1239C1.86102 12.5144 1.22785 12.5144 0.837329 12.1239C0.446804 11.7333 0.446804 11.1002 0.837329 10.7096L5.13022 6.41675L0.837327 2.12385C0.446803 1.73333 0.446803 1.10017 0.837327 0.709641Z\" fill=\"white\"/>\n                    </svg>\n                </Link>\n            </div>\n        </template>\n        <template v-if=\"step === 1\" #last>\n            <div v-if=\"step === 1\" class=\"bg-t_white-200 w-full flex justify-center items-end py-[6px]\">\n                <h6 class=\"italic text-t_black-800 montserrat text-[12px] \" v-if=\"trap_data.last_checked\">\n                    Last checked <span class=\" font-bold\">{{trap_data.last_checked}}</span>\n                </h6>\n            </div>\n        </template>\n        <template v-if=\"!unmapped\">\n\n            <div class=\"w-full mx-[24px]\" v-if=\"step === 7 || step === 8\">\n                <h1 class=\"text-[24px] mb-[36px] text-t_black-800 dark:text-t_white-200 font-fira font-semibold\" v-if=\"step === 8\">Edit scan</h1>\n                <span v-else></span>\n            </div>\n            <div class=\"w-full mx-[24px]\" v-else>\n                <h1 class=\"text-[18px] text-t_black-800 dark:text-t_white-200 italic font-fira\" v-if=\"step === 5 || step === 6\">{{form.words}}</h1>\n                <h1 class=\"text-[24px] mb-[36px] text-t_black-800 dark:text-t_white-200 font-fira font-semibold\" v-else>{{form.words}}</h1>\n            </div>\n            <step-one @selected=\"setStepOne\"  @remap=\"remap\" :qrs=\"qrs\" :coordinator=\"coordinator\" v-if=\"step === 1\"/>\n            <step-two @selected=\"setStepTwo\" v-if=\"step === 2\"/>\n            <step-three @selected=\"setStepThree\" v-if=\"step === 3\"/>\n            <step-four @selected=\"setStepFour\" v-if=\"step === 4\"/>\n            <step-five @selected=\"setStepFive\" v-if=\"step === 5\"/>\n            <step-six @selected=\"setStepSix\" v-if=\"step === 6\"/>\n            <add-note @selected=\"setNote\" :text=\"form.notes\" v-if=\"step === 7\"/>\n            <edit-form @selected=\"setEdit\" :values=\"form\" v-if=\"step === 8\"/>\n        </template>\n        <template v-else>\n            <div class=\"flex flex-wrap justify-center p-4\">\n                <label for=\"small\" class=\"mt-12 block mb-2 text-2xl font-bold text-gray-900 dark:text-gray-400\">Map Code</label>\n                <select v-model=\"newQR.nz_id\" id=\"small\" class=\" block p-4 mb-4 w-full text-md text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\n                    <option v-for=\"item in projects\" :value=\"item.nz_trap_id\">\n                           {{ item.name }} - {{ item.project.name }}\n                    </option>\n                </select>\n                <button type=\"button\" @click=\"submit(1)\" class=\"flex items-center justify-center focus:outline-none text-white text-lg bg-bay-of-many-500 hover:bg-bay-of-many-600 rounded-full py-4 w-full transition duration-150 ease-in\">\n                    Map QR\n                </button>\n            </div>\n        </template>\n\n    </Show>\n</template>\n\n<script>\nimport {useForm} from \"@inertiajs/inertia-vue3\";\nimport Show from \"@/Layouts/Show.vue\";\nimport { Link } from '@inertiajs/inertia-vue3'\nimport StepOne from \"@/Components/Inspection/StepOne.vue\";\nimport StepTwo from \"@/Components/Inspection/StepTwo.vue\";\nimport StepSix from \"@/Components/Inspection/StepSix.vue\";\nimport StepThree from \"@/Components/Inspection/StepThree.vue\";\nimport StepFive from \"@/Components/Inspection/StepFive.vue\";\nimport StepFour from \"@/Components/Inspection/StepFour.vue\";\nimport AddNote from \"@/Components/Inspection/AddNote.vue\";\nimport EditForm from \"@/Components/Inspection/EditForm.vue\";\nimport {ElMessage} from \"element-plus\";\nconst dateOb = new Date()\n\nconst day = ('0' + dateOb.getDate()).slice(-2)\nconst month = ('0' + (dateOb.getMonth() + 1)).slice(-2)\nconst year = dateOb.getFullYear()\nconst hours = ('0' + (dateOb.getHours())).slice(-2)\nconst minutes = ('0' + (dateOb.getMinutes())).slice(-2)\nconst seconds = ('0' + (dateOb.getSeconds())).slice(-2)\n\nconst dateS = year + '-' + month + '-' + day\nconst timeS = hours + ':' + minutes + ':' + seconds\nexport default {\n    components:{\n        EditForm,\n        AddNote,\n        StepFour,\n        StepFive,\n        StepThree,\n        StepSix,\n        StepTwo,\n        StepOne,\n        Show,\n        Link\n    },\n    name: \"Inspection\",\n    props:{\n        trap_data:Object,\n        unmapped: Boolean,\n        coordinator: Boolean,\n        projects: Object,\n        qrs: Object,\n    },\n    data() {\n        return {\n            step:1,\n            newQR: useForm({\n                qr_id:null,\n                nz_id:null,\n                type:'redir'\n            }),\n            prev_step:[1],\n            prev_word_1:null,\n            prev_word_2:null,\n            prev_word_3:null,\n            prev_word_4:null,\n            prev_word_5:null,\n            form:useForm({\n                QR_ID: this.trap_data.qr_id,\n                code: 'test',\n                date_format: dateS +' ' + timeS,\n                strikes: null,\n                species_caught: null,\n                status: null,\n                rebaited: null,\n                bait_type: null,\n                trap_condition: null,\n                notes: '',\n                words: 'I checked this trap and...',\n                trap_last_checked: null,\n                upload_to_nz: true\n            })\n        }\n    },\n    methods:{\n        back(){\n            this.step = this.prev_step.pop();\n            if (this.prev_step.length === 0){\n                this.prev_step.push(1)\n            }\n            if (this.step === 1){\n                this.form.words = this.form.words = 'I checked this trap and...'\n            }\n            if (this.step === 2){\n                this.form.words = this.form.words.replace(this.prev_word_2, '')\n            }\n            if (this.step === 3){\n                this.form.words = this.form.words.replace(this.prev_word_3, '')\n            }\n            if (this.step === 4){\n                this.form.words = this.form.words.replace(this.prev_word_4, '')\n            }\n            if (this.step === 5){\n                this.form.words = this.form.words.replace(this.prev_word_5, '')\n            }\n        },\n        setStepOne(data) {\n            this.form.strikes = data.strikes ?? 0;\n            this.form.status = data.status ?? null;\n            this.form.species_caught = data.species_caught ?? 'None';\n            this.form.words = data.words;\n            this.form.trap_condition = data.trap_condition ?? 'None';\n            this.step = data.step\n            this.prev_step.push(this.step)\n            this.prev_word_1 = data.words;\n        },\n        setStepTwo(data){\n            this.form.rebaited = data.rebaited ?? null;\n            this.form.status = data.status ?? null;\n            this.form.bait_type = data.bait_type ?? null;\n            this.form.species_caught = data.species_caught ?? 'None';\n            this.form.words = this.form.words + data.words ?? null;\n            this.step = data.step\n            this.prev_word_2 = data.words;\n            this.prev_step.push(this.step)\n\n        },\n        setStepThree(data){\n            this.form.words = this.form.words + data.words;\n            this.form.species_caught = data.species_caught;\n            this.step = data.step\n            this.prev_word_3 = data.words;\n            this.prev_step.push(this.step)\n\n        },\n        setStepFive(data){\n            this.form.rebaited = data.rebaited;\n            this.form.bait_type = data.bait_type ?? null;\n            this.form.words = this.form.words + data.words ?? null;\n            this.form.upload_to_nz = data.upload_to_nz ?? true;\n            this.step = data.step\n            this.prev_word_5 = data.words;\n            this.prev_step.push(this.step)\n\n        },\n        setStepFour(data){\n            this.form.status = data.status ?? null;\n            this.form.words = data.words;\n            this.form.trap_condition = data.trap_condition ?? 'None';\n            this.step = data.step\n            this.prev_word_4 = data.words;\n            this.prev_step.push(this.step)\n\n        },\n        setStepSix(data){\n            if (data === 0){\n                return this.submitInspection();\n            }\n            this.step = data\n        },\n        setNote(data){\n            this.form.notes = data.notes ?? null;\n            if (data.step === 0){\n                return this.submitInspection();\n            }\n            this.step = data.step\n            this.prev_step.push(this.step)\n\n        },\n        setEdit(data){\n            this.form.date_format = data.date_format;\n            this.form.species_caught = data.species_caught;\n            this.form.status = data.status;\n            this.form.rebaited = data.rebaited;\n            this.form.bait_type = data.bait_type;\n            this.form.trap_condition = data.trap_condition;\n            this.form.notes = data.notes;\n            return this.submitInspection();\n        },\n        submitInspection(){\n            this.form.post(route('inspection.save'))\n        },\n        remap(val){\n          this.newQR.qr_id = val\n          this.submit(2)\n        },\n        submit(type) {\n            if (type === 1){\n                this.newQR.qr_id = this.trap_data.qr_id\n            }else{\n                this.newQR.nz_id = this.trap_data.nz_trap_id\n            }\n            this.newQR.post(route('inspection.map_trap'),{\n                preserveScroll: true,\n                preserveState: true,\n                onSuccess:() => {\n                    ElMessage({\n                        message: 'Congrats, trap mapped.',\n                        type: 'success',\n                    })\n\n                }\n            })\n        },\n    }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"names":["_hoisted_1","_hoisted_2","_createElementVNode","_hoisted_3","_hoisted_5","_sfc_main","Panel","_createVNode","_createBlock","_createElementBlock","_Fragment","_renderList","_hoisted_15","CircleDash","_openBlock","_hoisted_4","_hoisted_6","_toDisplayString","_hoisted_7","_hoisted_9","_hoisted_8","Primary","TsTextArea","TsLabel","TsInput","_hoisted_10","_hoisted_11","_hoisted_13","_hoisted_16","_hoisted_18","_vModelSelect","_hoisted_14","_hoisted_17","_createSlots"],"mappings":"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"}